// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.5
// source: compute.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length float32 `protobuf:"fixed32,1,opt,name=length,proto3" json:"length,omitempty"`
	Width  float32 `protobuf:"fixed32,2,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *AreaRequest) Reset() {
	*x = AreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compute_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaRequest) ProtoMessage() {}

func (x *AreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_compute_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaRequest.ProtoReflect.Descriptor instead.
func (*AreaRequest) Descriptor() ([]byte, []int) {
	return file_compute_proto_rawDescGZIP(), []int{0}
}

func (x *AreaRequest) GetLength() float32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *AreaRequest) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type AreaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Area float32 `protobuf:"fixed32,1,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *AreaResponse) Reset() {
	*x = AreaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compute_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaResponse) ProtoMessage() {}

func (x *AreaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_compute_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaResponse.ProtoReflect.Descriptor instead.
func (*AreaResponse) Descriptor() ([]byte, []int) {
	return file_compute_proto_rawDescGZIP(), []int{1}
}

func (x *AreaResponse) GetArea() float32 {
	if x != nil {
		return x.Area
	}
	return 0
}

type PerimeterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length float32 `protobuf:"fixed32,1,opt,name=length,proto3" json:"length,omitempty"`
	Width  float32 `protobuf:"fixed32,2,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *PerimeterRequest) Reset() {
	*x = PerimeterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compute_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerimeterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerimeterRequest) ProtoMessage() {}

func (x *PerimeterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_compute_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerimeterRequest.ProtoReflect.Descriptor instead.
func (*PerimeterRequest) Descriptor() ([]byte, []int) {
	return file_compute_proto_rawDescGZIP(), []int{2}
}

func (x *PerimeterRequest) GetLength() float32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *PerimeterRequest) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type PerimeterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Perimeter float32 `protobuf:"fixed32,1,opt,name=perimeter,proto3" json:"perimeter,omitempty"`
}

func (x *PerimeterResponse) Reset() {
	*x = PerimeterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compute_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerimeterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerimeterResponse) ProtoMessage() {}

func (x *PerimeterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_compute_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerimeterResponse.ProtoReflect.Descriptor instead.
func (*PerimeterResponse) Descriptor() ([]byte, []int) {
	return file_compute_proto_rawDescGZIP(), []int{3}
}

func (x *PerimeterResponse) GetPerimeter() float32 {
	if x != nil {
		return x.Perimeter
	}
	return 0
}

var File_compute_proto protoreflect.FileDescriptor

var file_compute_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x3b, 0x0a, 0x0b, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0x22, 0x0a, 0x0c,
	0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x22, 0x40, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x22, 0x31, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x32, 0x66, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x0c, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x50, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x07, 0x5a,
	0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_compute_proto_rawDescOnce sync.Once
	file_compute_proto_rawDescData = file_compute_proto_rawDesc
)

func file_compute_proto_rawDescGZIP() []byte {
	file_compute_proto_rawDescOnce.Do(func() {
		file_compute_proto_rawDescData = protoimpl.X.CompressGZIP(file_compute_proto_rawDescData)
	})
	return file_compute_proto_rawDescData
}

var file_compute_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_compute_proto_goTypes = []interface{}{
	(*AreaRequest)(nil),       // 0: AreaRequest
	(*AreaResponse)(nil),      // 1: AreaResponse
	(*PerimeterRequest)(nil),  // 2: PerimeterRequest
	(*PerimeterResponse)(nil), // 3: PerimeterResponse
}
var file_compute_proto_depIdxs = []int32{
	0, // 0: Compute.Area:input_type -> AreaRequest
	2, // 1: Compute.Perimeter:input_type -> PerimeterRequest
	1, // 2: Compute.Area:output_type -> AreaResponse
	3, // 3: Compute.Perimeter:output_type -> PerimeterResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_compute_proto_init() }
func file_compute_proto_init() {
	if File_compute_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_compute_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compute_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compute_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerimeterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compute_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerimeterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_compute_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_compute_proto_goTypes,
		DependencyIndexes: file_compute_proto_depIdxs,
		MessageInfos:      file_compute_proto_msgTypes,
	}.Build()
	File_compute_proto = out.File
	file_compute_proto_rawDesc = nil
	file_compute_proto_goTypes = nil
	file_compute_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ComputeClient is the client API for Compute service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ComputeClient interface {
	Area(ctx context.Context, in *AreaRequest, opts ...grpc.CallOption) (*AreaResponse, error)
	Perimeter(ctx context.Context, in *PerimeterRequest, opts ...grpc.CallOption) (*PerimeterResponse, error)
}

type computeClient struct {
	cc grpc.ClientConnInterface
}

func NewComputeClient(cc grpc.ClientConnInterface) ComputeClient {
	return &computeClient{cc}
}

func (c *computeClient) Area(ctx context.Context, in *AreaRequest, opts ...grpc.CallOption) (*AreaResponse, error) {
	out := new(AreaResponse)
	err := c.cc.Invoke(ctx, "/Compute/Area", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *computeClient) Perimeter(ctx context.Context, in *PerimeterRequest, opts ...grpc.CallOption) (*PerimeterResponse, error) {
	out := new(PerimeterResponse)
	err := c.cc.Invoke(ctx, "/Compute/Perimeter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ComputeServer is the server API for Compute service.
type ComputeServer interface {
	Area(context.Context, *AreaRequest) (*AreaResponse, error)
	Perimeter(context.Context, *PerimeterRequest) (*PerimeterResponse, error)
}

// UnimplementedComputeServer can be embedded to have forward compatible implementations.
type UnimplementedComputeServer struct {
}

func (*UnimplementedComputeServer) Area(context.Context, *AreaRequest) (*AreaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Area not implemented")
}
func (*UnimplementedComputeServer) Perimeter(context.Context, *PerimeterRequest) (*PerimeterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Perimeter not implemented")
}

func RegisterComputeServer(s *grpc.Server, srv ComputeServer) {
	s.RegisterService(&_Compute_serviceDesc, srv)
}

func _Compute_Area_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AreaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeServer).Area(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Compute/Area",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeServer).Area(ctx, req.(*AreaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Compute_Perimeter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PerimeterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComputeServer).Perimeter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Compute/Perimeter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComputeServer).Perimeter(ctx, req.(*PerimeterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Compute_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Compute",
	HandlerType: (*ComputeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Area",
			Handler:    _Compute_Area_Handler,
		},
		{
			MethodName: "Perimeter",
			Handler:    _Compute_Perimeter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "compute.proto",
}
