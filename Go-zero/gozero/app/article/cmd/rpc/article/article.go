// Code generated by goctl. DO NOT EDIT.
// Source: article.proto

package article

import (
	"context"

	"gozero/app/article/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddAddrsReq              = pb.AddAddrsReq
	AddAddrsResp             = pb.AddAddrsResp
	AddAlertsReq             = pb.AddAlertsReq
	AddAlertsResp            = pb.AddAlertsResp
	AddArticleReq            = pb.AddArticleReq
	AddArticleResp           = pb.AddArticleResp
	AddClassReq              = pb.AddClassReq
	AddClassResp             = pb.AddClassResp
	AddClusterInfoReq        = pb.AddClusterInfoReq
	AddClusterInfoResp       = pb.AddClusterInfoResp
	AddCourseReq             = pb.AddCourseReq
	AddCourseResp            = pb.AddCourseResp
	AddCusterReq             = pb.AddCusterReq
	AddCusterResp            = pb.AddCusterResp
	AddStudentCourseReq      = pb.AddStudentCourseReq
	AddStudentCourseResp     = pb.AddStudentCourseResp
	AddStudentReq            = pb.AddStudentReq
	AddStudentResp           = pb.AddStudentResp
	AddTasksReq              = pb.AddTasksReq
	AddTasksResp             = pb.AddTasksResp
	AddUserInfoReq           = pb.AddUserInfoReq
	AddUserInfoResp          = pb.AddUserInfoResp
	AddWorkflowReq           = pb.AddWorkflowReq
	AddWorkflowResp          = pb.AddWorkflowResp
	Addrs                    = pb.Addrs
	Alerts                   = pb.Alerts
	Article                  = pb.Article
	Class                    = pb.Class
	ClusterInfo              = pb.ClusterInfo
	Course                   = pb.Course
	Custer                   = pb.Custer
	DelAddrsReq              = pb.DelAddrsReq
	DelAddrsResp             = pb.DelAddrsResp
	DelAlertsReq             = pb.DelAlertsReq
	DelAlertsResp            = pb.DelAlertsResp
	DelArticleReq            = pb.DelArticleReq
	DelArticleResp           = pb.DelArticleResp
	DelClassReq              = pb.DelClassReq
	DelClassResp             = pb.DelClassResp
	DelClusterInfoReq        = pb.DelClusterInfoReq
	DelClusterInfoResp       = pb.DelClusterInfoResp
	DelCourseReq             = pb.DelCourseReq
	DelCourseResp            = pb.DelCourseResp
	DelCusterReq             = pb.DelCusterReq
	DelCusterResp            = pb.DelCusterResp
	DelStudentCourseReq      = pb.DelStudentCourseReq
	DelStudentCourseResp     = pb.DelStudentCourseResp
	DelStudentReq            = pb.DelStudentReq
	DelStudentResp           = pb.DelStudentResp
	DelTasksReq              = pb.DelTasksReq
	DelTasksResp             = pb.DelTasksResp
	DelUserInfoReq           = pb.DelUserInfoReq
	DelUserInfoResp          = pb.DelUserInfoResp
	DelWorkflowReq           = pb.DelWorkflowReq
	DelWorkflowResp          = pb.DelWorkflowResp
	GetAddrsByIdReq          = pb.GetAddrsByIdReq
	GetAddrsByIdResp         = pb.GetAddrsByIdResp
	GetAlertsByIdReq         = pb.GetAlertsByIdReq
	GetAlertsByIdResp        = pb.GetAlertsByIdResp
	GetArticleByIdReq        = pb.GetArticleByIdReq
	GetArticleByIdResp       = pb.GetArticleByIdResp
	GetClassByIdReq          = pb.GetClassByIdReq
	GetClassByIdResp         = pb.GetClassByIdResp
	GetClusterInfoByIdReq    = pb.GetClusterInfoByIdReq
	GetClusterInfoByIdResp   = pb.GetClusterInfoByIdResp
	GetCourseByIdReq         = pb.GetCourseByIdReq
	GetCourseByIdResp        = pb.GetCourseByIdResp
	GetCusterByIdReq         = pb.GetCusterByIdReq
	GetCusterByIdResp        = pb.GetCusterByIdResp
	GetStudentByIdReq        = pb.GetStudentByIdReq
	GetStudentByIdResp       = pb.GetStudentByIdResp
	GetStudentCourseByIdReq  = pb.GetStudentCourseByIdReq
	GetStudentCourseByIdResp = pb.GetStudentCourseByIdResp
	GetTasksByIdReq          = pb.GetTasksByIdReq
	GetTasksByIdResp         = pb.GetTasksByIdResp
	GetUserInfoByIdReq       = pb.GetUserInfoByIdReq
	GetUserInfoByIdResp      = pb.GetUserInfoByIdResp
	GetWorkflowByIdReq       = pb.GetWorkflowByIdReq
	GetWorkflowByIdResp      = pb.GetWorkflowByIdResp
	SearchAddrsReq           = pb.SearchAddrsReq
	SearchAddrsResp          = pb.SearchAddrsResp
	SearchAlertsReq          = pb.SearchAlertsReq
	SearchAlertsResp         = pb.SearchAlertsResp
	SearchArticleReq         = pb.SearchArticleReq
	SearchArticleResp        = pb.SearchArticleResp
	SearchClassReq           = pb.SearchClassReq
	SearchClassResp          = pb.SearchClassResp
	SearchClusterInfoReq     = pb.SearchClusterInfoReq
	SearchClusterInfoResp    = pb.SearchClusterInfoResp
	SearchCourseReq          = pb.SearchCourseReq
	SearchCourseResp         = pb.SearchCourseResp
	SearchCusterReq          = pb.SearchCusterReq
	SearchCusterResp         = pb.SearchCusterResp
	SearchStudentCourseReq   = pb.SearchStudentCourseReq
	SearchStudentCourseResp  = pb.SearchStudentCourseResp
	SearchStudentReq         = pb.SearchStudentReq
	SearchStudentResp        = pb.SearchStudentResp
	SearchTasksReq           = pb.SearchTasksReq
	SearchTasksResp          = pb.SearchTasksResp
	SearchUserInfoReq        = pb.SearchUserInfoReq
	SearchUserInfoResp       = pb.SearchUserInfoResp
	SearchWorkflowReq        = pb.SearchWorkflowReq
	SearchWorkflowResp       = pb.SearchWorkflowResp
	Student                  = pb.Student
	StudentCourse            = pb.StudentCourse
	Tasks                    = pb.Tasks
	UpdateAddrsReq           = pb.UpdateAddrsReq
	UpdateAddrsResp          = pb.UpdateAddrsResp
	UpdateAlertsReq          = pb.UpdateAlertsReq
	UpdateAlertsResp         = pb.UpdateAlertsResp
	UpdateArticleReq         = pb.UpdateArticleReq
	UpdateArticleResp        = pb.UpdateArticleResp
	UpdateClassReq           = pb.UpdateClassReq
	UpdateClassResp          = pb.UpdateClassResp
	UpdateClusterInfoReq     = pb.UpdateClusterInfoReq
	UpdateClusterInfoResp    = pb.UpdateClusterInfoResp
	UpdateCourseReq          = pb.UpdateCourseReq
	UpdateCourseResp         = pb.UpdateCourseResp
	UpdateCusterReq          = pb.UpdateCusterReq
	UpdateCusterResp         = pb.UpdateCusterResp
	UpdateStudentCourseReq   = pb.UpdateStudentCourseReq
	UpdateStudentCourseResp  = pb.UpdateStudentCourseResp
	UpdateStudentReq         = pb.UpdateStudentReq
	UpdateStudentResp        = pb.UpdateStudentResp
	UpdateTasksReq           = pb.UpdateTasksReq
	UpdateTasksResp          = pb.UpdateTasksResp
	UpdateUserInfoReq        = pb.UpdateUserInfoReq
	UpdateUserInfoResp       = pb.UpdateUserInfoResp
	UpdateWorkflowReq        = pb.UpdateWorkflowReq
	UpdateWorkflowResp       = pb.UpdateWorkflowResp
	UserInfo                 = pb.UserInfo
	Workflow                 = pb.Workflow

	ArticleZrpcClient interface {
		// -----------------------addrs-----------------------
		AddAddrs(ctx context.Context, in *AddAddrsReq, opts ...grpc.CallOption) (*AddAddrsResp, error)
		UpdateAddrs(ctx context.Context, in *UpdateAddrsReq, opts ...grpc.CallOption) (*UpdateAddrsResp, error)
		DelAddrs(ctx context.Context, in *DelAddrsReq, opts ...grpc.CallOption) (*DelAddrsResp, error)
		GetAddrsById(ctx context.Context, in *GetAddrsByIdReq, opts ...grpc.CallOption) (*GetAddrsByIdResp, error)
		SearchAddrs(ctx context.Context, in *SearchAddrsReq, opts ...grpc.CallOption) (*SearchAddrsResp, error)
		// -----------------------alerts-----------------------
		AddAlerts(ctx context.Context, in *AddAlertsReq, opts ...grpc.CallOption) (*AddAlertsResp, error)
		UpdateAlerts(ctx context.Context, in *UpdateAlertsReq, opts ...grpc.CallOption) (*UpdateAlertsResp, error)
		DelAlerts(ctx context.Context, in *DelAlertsReq, opts ...grpc.CallOption) (*DelAlertsResp, error)
		GetAlertsById(ctx context.Context, in *GetAlertsByIdReq, opts ...grpc.CallOption) (*GetAlertsByIdResp, error)
		SearchAlerts(ctx context.Context, in *SearchAlertsReq, opts ...grpc.CallOption) (*SearchAlertsResp, error)
		// -----------------------article-----------------------
		AddArticle(ctx context.Context, in *AddArticleReq, opts ...grpc.CallOption) (*AddArticleResp, error)
		UpdateArticle(ctx context.Context, in *UpdateArticleReq, opts ...grpc.CallOption) (*UpdateArticleResp, error)
		DelArticle(ctx context.Context, in *DelArticleReq, opts ...grpc.CallOption) (*DelArticleResp, error)
		GetArticleById(ctx context.Context, in *GetArticleByIdReq, opts ...grpc.CallOption) (*GetArticleByIdResp, error)
		SearchArticle(ctx context.Context, in *SearchArticleReq, opts ...grpc.CallOption) (*SearchArticleResp, error)
		// -----------------------class-----------------------
		AddClass(ctx context.Context, in *AddClassReq, opts ...grpc.CallOption) (*AddClassResp, error)
		UpdateClass(ctx context.Context, in *UpdateClassReq, opts ...grpc.CallOption) (*UpdateClassResp, error)
		DelClass(ctx context.Context, in *DelClassReq, opts ...grpc.CallOption) (*DelClassResp, error)
		GetClassById(ctx context.Context, in *GetClassByIdReq, opts ...grpc.CallOption) (*GetClassByIdResp, error)
		SearchClass(ctx context.Context, in *SearchClassReq, opts ...grpc.CallOption) (*SearchClassResp, error)
		// -----------------------clusterInfo-----------------------
		AddClusterInfo(ctx context.Context, in *AddClusterInfoReq, opts ...grpc.CallOption) (*AddClusterInfoResp, error)
		UpdateClusterInfo(ctx context.Context, in *UpdateClusterInfoReq, opts ...grpc.CallOption) (*UpdateClusterInfoResp, error)
		DelClusterInfo(ctx context.Context, in *DelClusterInfoReq, opts ...grpc.CallOption) (*DelClusterInfoResp, error)
		GetClusterInfoById(ctx context.Context, in *GetClusterInfoByIdReq, opts ...grpc.CallOption) (*GetClusterInfoByIdResp, error)
		SearchClusterInfo(ctx context.Context, in *SearchClusterInfoReq, opts ...grpc.CallOption) (*SearchClusterInfoResp, error)
		// -----------------------course-----------------------
		AddCourse(ctx context.Context, in *AddCourseReq, opts ...grpc.CallOption) (*AddCourseResp, error)
		UpdateCourse(ctx context.Context, in *UpdateCourseReq, opts ...grpc.CallOption) (*UpdateCourseResp, error)
		DelCourse(ctx context.Context, in *DelCourseReq, opts ...grpc.CallOption) (*DelCourseResp, error)
		GetCourseById(ctx context.Context, in *GetCourseByIdReq, opts ...grpc.CallOption) (*GetCourseByIdResp, error)
		SearchCourse(ctx context.Context, in *SearchCourseReq, opts ...grpc.CallOption) (*SearchCourseResp, error)
		// -----------------------Custer-----------------------
		AddCuster(ctx context.Context, in *AddCusterReq, opts ...grpc.CallOption) (*AddCusterResp, error)
		UpdateCuster(ctx context.Context, in *UpdateCusterReq, opts ...grpc.CallOption) (*UpdateCusterResp, error)
		DelCuster(ctx context.Context, in *DelCusterReq, opts ...grpc.CallOption) (*DelCusterResp, error)
		GetCusterById(ctx context.Context, in *GetCusterByIdReq, opts ...grpc.CallOption) (*GetCusterByIdResp, error)
		SearchCuster(ctx context.Context, in *SearchCusterReq, opts ...grpc.CallOption) (*SearchCusterResp, error)
		// -----------------------student-----------------------
		AddStudent(ctx context.Context, in *AddStudentReq, opts ...grpc.CallOption) (*AddStudentResp, error)
		UpdateStudent(ctx context.Context, in *UpdateStudentReq, opts ...grpc.CallOption) (*UpdateStudentResp, error)
		DelStudent(ctx context.Context, in *DelStudentReq, opts ...grpc.CallOption) (*DelStudentResp, error)
		GetStudentById(ctx context.Context, in *GetStudentByIdReq, opts ...grpc.CallOption) (*GetStudentByIdResp, error)
		SearchStudent(ctx context.Context, in *SearchStudentReq, opts ...grpc.CallOption) (*SearchStudentResp, error)
		// -----------------------studentCourse-----------------------
		AddStudentCourse(ctx context.Context, in *AddStudentCourseReq, opts ...grpc.CallOption) (*AddStudentCourseResp, error)
		UpdateStudentCourse(ctx context.Context, in *UpdateStudentCourseReq, opts ...grpc.CallOption) (*UpdateStudentCourseResp, error)
		DelStudentCourse(ctx context.Context, in *DelStudentCourseReq, opts ...grpc.CallOption) (*DelStudentCourseResp, error)
		GetStudentCourseById(ctx context.Context, in *GetStudentCourseByIdReq, opts ...grpc.CallOption) (*GetStudentCourseByIdResp, error)
		SearchStudentCourse(ctx context.Context, in *SearchStudentCourseReq, opts ...grpc.CallOption) (*SearchStudentCourseResp, error)
		// -----------------------tasks-----------------------
		AddTasks(ctx context.Context, in *AddTasksReq, opts ...grpc.CallOption) (*AddTasksResp, error)
		UpdateTasks(ctx context.Context, in *UpdateTasksReq, opts ...grpc.CallOption) (*UpdateTasksResp, error)
		DelTasks(ctx context.Context, in *DelTasksReq, opts ...grpc.CallOption) (*DelTasksResp, error)
		GetTasksById(ctx context.Context, in *GetTasksByIdReq, opts ...grpc.CallOption) (*GetTasksByIdResp, error)
		SearchTasks(ctx context.Context, in *SearchTasksReq, opts ...grpc.CallOption) (*SearchTasksResp, error)
		// -----------------------userInfo-----------------------
		AddUserInfo(ctx context.Context, in *AddUserInfoReq, opts ...grpc.CallOption) (*AddUserInfoResp, error)
		UpdateUserInfo(ctx context.Context, in *UpdateUserInfoReq, opts ...grpc.CallOption) (*UpdateUserInfoResp, error)
		DelUserInfo(ctx context.Context, in *DelUserInfoReq, opts ...grpc.CallOption) (*DelUserInfoResp, error)
		GetUserInfoById(ctx context.Context, in *GetUserInfoByIdReq, opts ...grpc.CallOption) (*GetUserInfoByIdResp, error)
		SearchUserInfo(ctx context.Context, in *SearchUserInfoReq, opts ...grpc.CallOption) (*SearchUserInfoResp, error)
		// -----------------------workflow-----------------------
		AddWorkflow(ctx context.Context, in *AddWorkflowReq, opts ...grpc.CallOption) (*AddWorkflowResp, error)
		UpdateWorkflow(ctx context.Context, in *UpdateWorkflowReq, opts ...grpc.CallOption) (*UpdateWorkflowResp, error)
		DelWorkflow(ctx context.Context, in *DelWorkflowReq, opts ...grpc.CallOption) (*DelWorkflowResp, error)
		GetWorkflowById(ctx context.Context, in *GetWorkflowByIdReq, opts ...grpc.CallOption) (*GetWorkflowByIdResp, error)
		SearchWorkflow(ctx context.Context, in *SearchWorkflowReq, opts ...grpc.CallOption) (*SearchWorkflowResp, error)
	}

	defaultArticleZrpcClient struct {
		cli zrpc.Client
	}
)

func NewArticleZrpcClient(cli zrpc.Client) ArticleZrpcClient {
	return &defaultArticleZrpcClient{
		cli: cli,
	}
}

// -----------------------addrs-----------------------
func (m *defaultArticleZrpcClient) AddAddrs(ctx context.Context, in *AddAddrsReq, opts ...grpc.CallOption) (*AddAddrsResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.AddAddrs(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) UpdateAddrs(ctx context.Context, in *UpdateAddrsReq, opts ...grpc.CallOption) (*UpdateAddrsResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.UpdateAddrs(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) DelAddrs(ctx context.Context, in *DelAddrsReq, opts ...grpc.CallOption) (*DelAddrsResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.DelAddrs(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) GetAddrsById(ctx context.Context, in *GetAddrsByIdReq, opts ...grpc.CallOption) (*GetAddrsByIdResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.GetAddrsById(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) SearchAddrs(ctx context.Context, in *SearchAddrsReq, opts ...grpc.CallOption) (*SearchAddrsResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.SearchAddrs(ctx, in, opts...)
}

// -----------------------alerts-----------------------
func (m *defaultArticleZrpcClient) AddAlerts(ctx context.Context, in *AddAlertsReq, opts ...grpc.CallOption) (*AddAlertsResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.AddAlerts(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) UpdateAlerts(ctx context.Context, in *UpdateAlertsReq, opts ...grpc.CallOption) (*UpdateAlertsResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.UpdateAlerts(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) DelAlerts(ctx context.Context, in *DelAlertsReq, opts ...grpc.CallOption) (*DelAlertsResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.DelAlerts(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) GetAlertsById(ctx context.Context, in *GetAlertsByIdReq, opts ...grpc.CallOption) (*GetAlertsByIdResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.GetAlertsById(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) SearchAlerts(ctx context.Context, in *SearchAlertsReq, opts ...grpc.CallOption) (*SearchAlertsResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.SearchAlerts(ctx, in, opts...)
}

// -----------------------article-----------------------
func (m *defaultArticleZrpcClient) AddArticle(ctx context.Context, in *AddArticleReq, opts ...grpc.CallOption) (*AddArticleResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.AddArticle(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) UpdateArticle(ctx context.Context, in *UpdateArticleReq, opts ...grpc.CallOption) (*UpdateArticleResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.UpdateArticle(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) DelArticle(ctx context.Context, in *DelArticleReq, opts ...grpc.CallOption) (*DelArticleResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.DelArticle(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) GetArticleById(ctx context.Context, in *GetArticleByIdReq, opts ...grpc.CallOption) (*GetArticleByIdResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.GetArticleById(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) SearchArticle(ctx context.Context, in *SearchArticleReq, opts ...grpc.CallOption) (*SearchArticleResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.SearchArticle(ctx, in, opts...)
}

// -----------------------class-----------------------
func (m *defaultArticleZrpcClient) AddClass(ctx context.Context, in *AddClassReq, opts ...grpc.CallOption) (*AddClassResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.AddClass(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) UpdateClass(ctx context.Context, in *UpdateClassReq, opts ...grpc.CallOption) (*UpdateClassResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.UpdateClass(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) DelClass(ctx context.Context, in *DelClassReq, opts ...grpc.CallOption) (*DelClassResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.DelClass(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) GetClassById(ctx context.Context, in *GetClassByIdReq, opts ...grpc.CallOption) (*GetClassByIdResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.GetClassById(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) SearchClass(ctx context.Context, in *SearchClassReq, opts ...grpc.CallOption) (*SearchClassResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.SearchClass(ctx, in, opts...)
}

// -----------------------clusterInfo-----------------------
func (m *defaultArticleZrpcClient) AddClusterInfo(ctx context.Context, in *AddClusterInfoReq, opts ...grpc.CallOption) (*AddClusterInfoResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.AddClusterInfo(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) UpdateClusterInfo(ctx context.Context, in *UpdateClusterInfoReq, opts ...grpc.CallOption) (*UpdateClusterInfoResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.UpdateClusterInfo(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) DelClusterInfo(ctx context.Context, in *DelClusterInfoReq, opts ...grpc.CallOption) (*DelClusterInfoResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.DelClusterInfo(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) GetClusterInfoById(ctx context.Context, in *GetClusterInfoByIdReq, opts ...grpc.CallOption) (*GetClusterInfoByIdResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.GetClusterInfoById(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) SearchClusterInfo(ctx context.Context, in *SearchClusterInfoReq, opts ...grpc.CallOption) (*SearchClusterInfoResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.SearchClusterInfo(ctx, in, opts...)
}

// -----------------------course-----------------------
func (m *defaultArticleZrpcClient) AddCourse(ctx context.Context, in *AddCourseReq, opts ...grpc.CallOption) (*AddCourseResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.AddCourse(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) UpdateCourse(ctx context.Context, in *UpdateCourseReq, opts ...grpc.CallOption) (*UpdateCourseResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.UpdateCourse(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) DelCourse(ctx context.Context, in *DelCourseReq, opts ...grpc.CallOption) (*DelCourseResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.DelCourse(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) GetCourseById(ctx context.Context, in *GetCourseByIdReq, opts ...grpc.CallOption) (*GetCourseByIdResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.GetCourseById(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) SearchCourse(ctx context.Context, in *SearchCourseReq, opts ...grpc.CallOption) (*SearchCourseResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.SearchCourse(ctx, in, opts...)
}

// -----------------------Custer-----------------------
func (m *defaultArticleZrpcClient) AddCuster(ctx context.Context, in *AddCusterReq, opts ...grpc.CallOption) (*AddCusterResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.AddCuster(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) UpdateCuster(ctx context.Context, in *UpdateCusterReq, opts ...grpc.CallOption) (*UpdateCusterResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.UpdateCuster(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) DelCuster(ctx context.Context, in *DelCusterReq, opts ...grpc.CallOption) (*DelCusterResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.DelCuster(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) GetCusterById(ctx context.Context, in *GetCusterByIdReq, opts ...grpc.CallOption) (*GetCusterByIdResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.GetCusterById(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) SearchCuster(ctx context.Context, in *SearchCusterReq, opts ...grpc.CallOption) (*SearchCusterResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.SearchCuster(ctx, in, opts...)
}

// -----------------------student-----------------------
func (m *defaultArticleZrpcClient) AddStudent(ctx context.Context, in *AddStudentReq, opts ...grpc.CallOption) (*AddStudentResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.AddStudent(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) UpdateStudent(ctx context.Context, in *UpdateStudentReq, opts ...grpc.CallOption) (*UpdateStudentResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.UpdateStudent(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) DelStudent(ctx context.Context, in *DelStudentReq, opts ...grpc.CallOption) (*DelStudentResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.DelStudent(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) GetStudentById(ctx context.Context, in *GetStudentByIdReq, opts ...grpc.CallOption) (*GetStudentByIdResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.GetStudentById(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) SearchStudent(ctx context.Context, in *SearchStudentReq, opts ...grpc.CallOption) (*SearchStudentResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.SearchStudent(ctx, in, opts...)
}

// -----------------------studentCourse-----------------------
func (m *defaultArticleZrpcClient) AddStudentCourse(ctx context.Context, in *AddStudentCourseReq, opts ...grpc.CallOption) (*AddStudentCourseResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.AddStudentCourse(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) UpdateStudentCourse(ctx context.Context, in *UpdateStudentCourseReq, opts ...grpc.CallOption) (*UpdateStudentCourseResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.UpdateStudentCourse(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) DelStudentCourse(ctx context.Context, in *DelStudentCourseReq, opts ...grpc.CallOption) (*DelStudentCourseResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.DelStudentCourse(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) GetStudentCourseById(ctx context.Context, in *GetStudentCourseByIdReq, opts ...grpc.CallOption) (*GetStudentCourseByIdResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.GetStudentCourseById(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) SearchStudentCourse(ctx context.Context, in *SearchStudentCourseReq, opts ...grpc.CallOption) (*SearchStudentCourseResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.SearchStudentCourse(ctx, in, opts...)
}

// -----------------------tasks-----------------------
func (m *defaultArticleZrpcClient) AddTasks(ctx context.Context, in *AddTasksReq, opts ...grpc.CallOption) (*AddTasksResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.AddTasks(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) UpdateTasks(ctx context.Context, in *UpdateTasksReq, opts ...grpc.CallOption) (*UpdateTasksResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.UpdateTasks(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) DelTasks(ctx context.Context, in *DelTasksReq, opts ...grpc.CallOption) (*DelTasksResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.DelTasks(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) GetTasksById(ctx context.Context, in *GetTasksByIdReq, opts ...grpc.CallOption) (*GetTasksByIdResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.GetTasksById(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) SearchTasks(ctx context.Context, in *SearchTasksReq, opts ...grpc.CallOption) (*SearchTasksResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.SearchTasks(ctx, in, opts...)
}

// -----------------------userInfo-----------------------
func (m *defaultArticleZrpcClient) AddUserInfo(ctx context.Context, in *AddUserInfoReq, opts ...grpc.CallOption) (*AddUserInfoResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.AddUserInfo(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) UpdateUserInfo(ctx context.Context, in *UpdateUserInfoReq, opts ...grpc.CallOption) (*UpdateUserInfoResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.UpdateUserInfo(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) DelUserInfo(ctx context.Context, in *DelUserInfoReq, opts ...grpc.CallOption) (*DelUserInfoResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.DelUserInfo(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) GetUserInfoById(ctx context.Context, in *GetUserInfoByIdReq, opts ...grpc.CallOption) (*GetUserInfoByIdResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.GetUserInfoById(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) SearchUserInfo(ctx context.Context, in *SearchUserInfoReq, opts ...grpc.CallOption) (*SearchUserInfoResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.SearchUserInfo(ctx, in, opts...)
}

// -----------------------workflow-----------------------
func (m *defaultArticleZrpcClient) AddWorkflow(ctx context.Context, in *AddWorkflowReq, opts ...grpc.CallOption) (*AddWorkflowResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.AddWorkflow(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) UpdateWorkflow(ctx context.Context, in *UpdateWorkflowReq, opts ...grpc.CallOption) (*UpdateWorkflowResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.UpdateWorkflow(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) DelWorkflow(ctx context.Context, in *DelWorkflowReq, opts ...grpc.CallOption) (*DelWorkflowResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.DelWorkflow(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) GetWorkflowById(ctx context.Context, in *GetWorkflowByIdReq, opts ...grpc.CallOption) (*GetWorkflowByIdResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.GetWorkflowById(ctx, in, opts...)
}

func (m *defaultArticleZrpcClient) SearchWorkflow(ctx context.Context, in *SearchWorkflowReq, opts ...grpc.CallOption) (*SearchWorkflowResp, error) {
	client := pb.NewArticleClient(m.cli.Conn())
	return client.SearchWorkflow(ctx, in, opts...)
}
