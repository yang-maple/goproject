// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.27.5
// source: article.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------addrs--------------------------------
type Addrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //id
	CreatedAt int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
	UpdatedAt int64  `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //updatedAt
	DeletedAt int64  `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
	Country   string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`      //country
	City      string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`            //city
}

func (x *Addrs) Reset() {
	*x = Addrs{}
	mi := &file_article_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Addrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Addrs) ProtoMessage() {}

func (x *Addrs) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Addrs.ProtoReflect.Descriptor instead.
func (*Addrs) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{0}
}

func (x *Addrs) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Addrs) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Addrs) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Addrs) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *Addrs) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Addrs) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type AddAddrsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt int64  `protobuf:"varint,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
	UpdatedAt int64  `protobuf:"varint,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //updatedAt
	DeletedAt int64  `protobuf:"varint,3,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
	Country   string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`      //country
	City      string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`            //city
}

func (x *AddAddrsReq) Reset() {
	*x = AddAddrsReq{}
	mi := &file_article_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAddrsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAddrsReq) ProtoMessage() {}

func (x *AddAddrsReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAddrsReq.ProtoReflect.Descriptor instead.
func (*AddAddrsReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{1}
}

func (x *AddAddrsReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddAddrsReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AddAddrsReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *AddAddrsReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddAddrsReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type AddAddrsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddAddrsResp) Reset() {
	*x = AddAddrsResp{}
	mi := &file_article_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAddrsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAddrsResp) ProtoMessage() {}

func (x *AddAddrsResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAddrsResp.ProtoReflect.Descriptor instead.
func (*AddAddrsResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{2}
}

type UpdateAddrsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //id
	CreatedAt int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
	UpdatedAt int64  `protobuf:"varint,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //updatedAt
	DeletedAt int64  `protobuf:"varint,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
	Country   string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`      //country
	City      string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`            //city
}

func (x *UpdateAddrsReq) Reset() {
	*x = UpdateAddrsReq{}
	mi := &file_article_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAddrsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddrsReq) ProtoMessage() {}

func (x *UpdateAddrsReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddrsReq.ProtoReflect.Descriptor instead.
func (*UpdateAddrsReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateAddrsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAddrsReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UpdateAddrsReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UpdateAddrsReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *UpdateAddrsReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UpdateAddrsReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type UpdateAddrsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAddrsResp) Reset() {
	*x = UpdateAddrsResp{}
	mi := &file_article_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAddrsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAddrsResp) ProtoMessage() {}

func (x *UpdateAddrsResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAddrsResp.ProtoReflect.Descriptor instead.
func (*UpdateAddrsResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{4}
}

type DelAddrsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelAddrsReq) Reset() {
	*x = DelAddrsReq{}
	mi := &file_article_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAddrsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAddrsReq) ProtoMessage() {}

func (x *DelAddrsReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAddrsReq.ProtoReflect.Descriptor instead.
func (*DelAddrsReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{5}
}

func (x *DelAddrsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelAddrsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelAddrsResp) Reset() {
	*x = DelAddrsResp{}
	mi := &file_article_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAddrsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAddrsResp) ProtoMessage() {}

func (x *DelAddrsResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAddrsResp.ProtoReflect.Descriptor instead.
func (*DelAddrsResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{6}
}

type GetAddrsByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetAddrsByIdReq) Reset() {
	*x = GetAddrsByIdReq{}
	mi := &file_article_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAddrsByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddrsByIdReq) ProtoMessage() {}

func (x *GetAddrsByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddrsByIdReq.ProtoReflect.Descriptor instead.
func (*GetAddrsByIdReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{7}
}

func (x *GetAddrsByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAddrsByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addrs *Addrs `protobuf:"bytes,1,opt,name=addrs,proto3" json:"addrs,omitempty"` //addrs
}

func (x *GetAddrsByIdResp) Reset() {
	*x = GetAddrsByIdResp{}
	mi := &file_article_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAddrsByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddrsByIdResp) ProtoMessage() {}

func (x *GetAddrsByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddrsByIdResp.ProtoReflect.Descriptor instead.
func (*GetAddrsByIdResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{8}
}

func (x *GetAddrsByIdResp) GetAddrs() *Addrs {
	if x != nil {
		return x.Addrs
	}
	return nil
}

type SearchAddrsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`           //page
	Limit     int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`         //limit
	Id        int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`               //id
	CreatedAt int64  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
	UpdatedAt int64  `protobuf:"varint,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //updatedAt
	DeletedAt int64  `protobuf:"varint,6,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
	Country   string `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`      //country
	City      string `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`            //city
}

func (x *SearchAddrsReq) Reset() {
	*x = SearchAddrsReq{}
	mi := &file_article_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAddrsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAddrsReq) ProtoMessage() {}

func (x *SearchAddrsReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAddrsReq.ProtoReflect.Descriptor instead.
func (*SearchAddrsReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{9}
}

func (x *SearchAddrsReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAddrsReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchAddrsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchAddrsReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SearchAddrsReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SearchAddrsReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

func (x *SearchAddrsReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SearchAddrsReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type SearchAddrsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addrs []*Addrs `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"` //addrs
}

func (x *SearchAddrsResp) Reset() {
	*x = SearchAddrsResp{}
	mi := &file_article_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAddrsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAddrsResp) ProtoMessage() {}

func (x *SearchAddrsResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAddrsResp.ProtoReflect.Descriptor instead.
func (*SearchAddrsResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{10}
}

func (x *SearchAddrsResp) GetAddrs() []*Addrs {
	if x != nil {
		return x.Addrs
	}
	return nil
}

// --------------------------------alerts--------------------------------
type Alerts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //id
	CreatedAt   int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //createdAt
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` //description
	Summary     string `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`         //summary
	Alertname   string `protobuf:"bytes,5,opt,name=alertname,proto3" json:"alertname,omitempty"`     //alertname
	Instance    string `protobuf:"bytes,6,opt,name=instance,proto3" json:"instance,omitempty"`       //instance
	Ip          string `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`                   //ip
	Job         string `protobuf:"bytes,8,opt,name=job,proto3" json:"job,omitempty"`                 //job
	Region      string `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`           //region
	Severity    string `protobuf:"bytes,10,opt,name=severity,proto3" json:"severity,omitempty"`      //severity
	Port        string `protobuf:"bytes,11,opt,name=port,proto3" json:"port,omitempty"`              //port
	Status      string `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`          //status
}

func (x *Alerts) Reset() {
	*x = Alerts{}
	mi := &file_article_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alerts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alerts) ProtoMessage() {}

func (x *Alerts) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alerts.ProtoReflect.Descriptor instead.
func (*Alerts) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{11}
}

func (x *Alerts) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Alerts) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Alerts) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Alerts) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Alerts) GetAlertname() string {
	if x != nil {
		return x.Alertname
	}
	return ""
}

func (x *Alerts) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *Alerts) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Alerts) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *Alerts) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Alerts) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *Alerts) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Alerts) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AddAlertsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt   int64  `protobuf:"varint,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //createdAt
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"` //description
	Summary     string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`         //summary
	Alertname   string `protobuf:"bytes,4,opt,name=alertname,proto3" json:"alertname,omitempty"`     //alertname
	Instance    string `protobuf:"bytes,5,opt,name=instance,proto3" json:"instance,omitempty"`       //instance
	Ip          string `protobuf:"bytes,6,opt,name=ip,proto3" json:"ip,omitempty"`                   //ip
	Job         string `protobuf:"bytes,7,opt,name=job,proto3" json:"job,omitempty"`                 //job
	Region      string `protobuf:"bytes,8,opt,name=region,proto3" json:"region,omitempty"`           //region
	Severity    string `protobuf:"bytes,9,opt,name=severity,proto3" json:"severity,omitempty"`       //severity
	Port        string `protobuf:"bytes,10,opt,name=port,proto3" json:"port,omitempty"`              //port
	Status      string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`          //status
}

func (x *AddAlertsReq) Reset() {
	*x = AddAlertsReq{}
	mi := &file_article_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAlertsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAlertsReq) ProtoMessage() {}

func (x *AddAlertsReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAlertsReq.ProtoReflect.Descriptor instead.
func (*AddAlertsReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{12}
}

func (x *AddAlertsReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddAlertsReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddAlertsReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *AddAlertsReq) GetAlertname() string {
	if x != nil {
		return x.Alertname
	}
	return ""
}

func (x *AddAlertsReq) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *AddAlertsReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AddAlertsReq) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *AddAlertsReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddAlertsReq) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *AddAlertsReq) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *AddAlertsReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AddAlertsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddAlertsResp) Reset() {
	*x = AddAlertsResp{}
	mi := &file_article_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAlertsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAlertsResp) ProtoMessage() {}

func (x *AddAlertsResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAlertsResp.ProtoReflect.Descriptor instead.
func (*AddAlertsResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{13}
}

type UpdateAlertsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //id
	CreatedAt   int64  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //createdAt
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"` //description
	Summary     string `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`         //summary
	Alertname   string `protobuf:"bytes,5,opt,name=alertname,proto3" json:"alertname,omitempty"`     //alertname
	Instance    string `protobuf:"bytes,6,opt,name=instance,proto3" json:"instance,omitempty"`       //instance
	Ip          string `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`                   //ip
	Job         string `protobuf:"bytes,8,opt,name=job,proto3" json:"job,omitempty"`                 //job
	Region      string `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`           //region
	Severity    string `protobuf:"bytes,10,opt,name=severity,proto3" json:"severity,omitempty"`      //severity
	Port        string `protobuf:"bytes,11,opt,name=port,proto3" json:"port,omitempty"`              //port
	Status      string `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`          //status
}

func (x *UpdateAlertsReq) Reset() {
	*x = UpdateAlertsReq{}
	mi := &file_article_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAlertsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertsReq) ProtoMessage() {}

func (x *UpdateAlertsReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertsReq.ProtoReflect.Descriptor instead.
func (*UpdateAlertsReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateAlertsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAlertsReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UpdateAlertsReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAlertsReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *UpdateAlertsReq) GetAlertname() string {
	if x != nil {
		return x.Alertname
	}
	return ""
}

func (x *UpdateAlertsReq) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *UpdateAlertsReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UpdateAlertsReq) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *UpdateAlertsReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateAlertsReq) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *UpdateAlertsReq) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *UpdateAlertsReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateAlertsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAlertsResp) Reset() {
	*x = UpdateAlertsResp{}
	mi := &file_article_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAlertsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertsResp) ProtoMessage() {}

func (x *UpdateAlertsResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertsResp.ProtoReflect.Descriptor instead.
func (*UpdateAlertsResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{15}
}

type DelAlertsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelAlertsReq) Reset() {
	*x = DelAlertsReq{}
	mi := &file_article_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAlertsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAlertsReq) ProtoMessage() {}

func (x *DelAlertsReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAlertsReq.ProtoReflect.Descriptor instead.
func (*DelAlertsReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{16}
}

func (x *DelAlertsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelAlertsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelAlertsResp) Reset() {
	*x = DelAlertsResp{}
	mi := &file_article_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAlertsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAlertsResp) ProtoMessage() {}

func (x *DelAlertsResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAlertsResp.ProtoReflect.Descriptor instead.
func (*DelAlertsResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{17}
}

type GetAlertsByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetAlertsByIdReq) Reset() {
	*x = GetAlertsByIdReq{}
	mi := &file_article_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAlertsByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertsByIdReq) ProtoMessage() {}

func (x *GetAlertsByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertsByIdReq.ProtoReflect.Descriptor instead.
func (*GetAlertsByIdReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{18}
}

func (x *GetAlertsByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAlertsByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alerts *Alerts `protobuf:"bytes,1,opt,name=alerts,proto3" json:"alerts,omitempty"` //alerts
}

func (x *GetAlertsByIdResp) Reset() {
	*x = GetAlertsByIdResp{}
	mi := &file_article_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAlertsByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertsByIdResp) ProtoMessage() {}

func (x *GetAlertsByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertsByIdResp.ProtoReflect.Descriptor instead.
func (*GetAlertsByIdResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{19}
}

func (x *GetAlertsByIdResp) GetAlerts() *Alerts {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type SearchAlertsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`              //page
	Limit       int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`            //limit
	Id          int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                  //id
	CreatedAt   int64  `protobuf:"varint,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //createdAt
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"` //description
	Summary     string `protobuf:"bytes,6,opt,name=summary,proto3" json:"summary,omitempty"`         //summary
	Alertname   string `protobuf:"bytes,7,opt,name=alertname,proto3" json:"alertname,omitempty"`     //alertname
	Instance    string `protobuf:"bytes,8,opt,name=instance,proto3" json:"instance,omitempty"`       //instance
	Ip          string `protobuf:"bytes,9,opt,name=ip,proto3" json:"ip,omitempty"`                   //ip
	Job         string `protobuf:"bytes,10,opt,name=job,proto3" json:"job,omitempty"`                //job
	Region      string `protobuf:"bytes,11,opt,name=region,proto3" json:"region,omitempty"`          //region
	Severity    string `protobuf:"bytes,12,opt,name=severity,proto3" json:"severity,omitempty"`      //severity
	Port        string `protobuf:"bytes,13,opt,name=port,proto3" json:"port,omitempty"`              //port
	Status      string `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`          //status
}

func (x *SearchAlertsReq) Reset() {
	*x = SearchAlertsReq{}
	mi := &file_article_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAlertsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAlertsReq) ProtoMessage() {}

func (x *SearchAlertsReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAlertsReq.ProtoReflect.Descriptor instead.
func (*SearchAlertsReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{20}
}

func (x *SearchAlertsReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchAlertsReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchAlertsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchAlertsReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SearchAlertsReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SearchAlertsReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *SearchAlertsReq) GetAlertname() string {
	if x != nil {
		return x.Alertname
	}
	return ""
}

func (x *SearchAlertsReq) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *SearchAlertsReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SearchAlertsReq) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *SearchAlertsReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *SearchAlertsReq) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *SearchAlertsReq) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *SearchAlertsReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SearchAlertsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alerts []*Alerts `protobuf:"bytes,1,rep,name=alerts,proto3" json:"alerts,omitempty"` //alerts
}

func (x *SearchAlertsResp) Reset() {
	*x = SearchAlertsResp{}
	mi := &file_article_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchAlertsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAlertsResp) ProtoMessage() {}

func (x *SearchAlertsResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAlertsResp.ProtoReflect.Descriptor instead.
func (*SearchAlertsResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{21}
}

func (x *SearchAlertsResp) GetAlerts() []*Alerts {
	if x != nil {
		return x.Alerts
	}
	return nil
}

// --------------------------------article--------------------------------
type Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          //id
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`     //title
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"` //content
}

func (x *Article) Reset() {
	*x = Article{}
	mi := &file_article_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Article) ProtoMessage() {}

func (x *Article) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Article.ProtoReflect.Descriptor instead.
func (*Article) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{22}
}

func (x *Article) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Article) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Article) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`     //title
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` //content
}

func (x *AddArticleReq) Reset() {
	*x = AddArticleReq{}
	mi := &file_article_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddArticleReq) ProtoMessage() {}

func (x *AddArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddArticleReq.ProtoReflect.Descriptor instead.
func (*AddArticleReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{23}
}

func (x *AddArticleReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddArticleReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddArticleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddArticleResp) Reset() {
	*x = AddArticleResp{}
	mi := &file_article_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddArticleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddArticleResp) ProtoMessage() {}

func (x *AddArticleResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddArticleResp.ProtoReflect.Descriptor instead.
func (*AddArticleResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{24}
}

type UpdateArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          //id
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`     //title
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"` //content
}

func (x *UpdateArticleReq) Reset() {
	*x = UpdateArticleReq{}
	mi := &file_article_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticleReq) ProtoMessage() {}

func (x *UpdateArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticleReq.ProtoReflect.Descriptor instead.
func (*UpdateArticleReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateArticleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateArticleReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateArticleReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateArticleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateArticleResp) Reset() {
	*x = UpdateArticleResp{}
	mi := &file_article_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateArticleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticleResp) ProtoMessage() {}

func (x *UpdateArticleResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticleResp.ProtoReflect.Descriptor instead.
func (*UpdateArticleResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{26}
}

type DelArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelArticleReq) Reset() {
	*x = DelArticleReq{}
	mi := &file_article_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelArticleReq) ProtoMessage() {}

func (x *DelArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelArticleReq.ProtoReflect.Descriptor instead.
func (*DelArticleReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{27}
}

func (x *DelArticleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelArticleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelArticleResp) Reset() {
	*x = DelArticleResp{}
	mi := &file_article_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelArticleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelArticleResp) ProtoMessage() {}

func (x *DelArticleResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelArticleResp.ProtoReflect.Descriptor instead.
func (*DelArticleResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{28}
}

type GetArticleByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetArticleByIdReq) Reset() {
	*x = GetArticleByIdReq{}
	mi := &file_article_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticleByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleByIdReq) ProtoMessage() {}

func (x *GetArticleByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleByIdReq.ProtoReflect.Descriptor instead.
func (*GetArticleByIdReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{29}
}

func (x *GetArticleByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetArticleByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Article *Article `protobuf:"bytes,1,opt,name=article,proto3" json:"article,omitempty"` //article
}

func (x *GetArticleByIdResp) Reset() {
	*x = GetArticleByIdResp{}
	mi := &file_article_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticleByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleByIdResp) ProtoMessage() {}

func (x *GetArticleByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleByIdResp.ProtoReflect.Descriptor instead.
func (*GetArticleByIdResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{30}
}

func (x *GetArticleByIdResp) GetArticle() *Article {
	if x != nil {
		return x.Article
	}
	return nil
}

type SearchArticleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`      //page
	Limit   int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`    //limit
	Id      int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`          //id
	Title   string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`     //title
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"` //content
}

func (x *SearchArticleReq) Reset() {
	*x = SearchArticleReq{}
	mi := &file_article_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchArticleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchArticleReq) ProtoMessage() {}

func (x *SearchArticleReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchArticleReq.ProtoReflect.Descriptor instead.
func (*SearchArticleReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{31}
}

func (x *SearchArticleReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchArticleReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchArticleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchArticleReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchArticleReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SearchArticleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Article []*Article `protobuf:"bytes,1,rep,name=article,proto3" json:"article,omitempty"` //article
}

func (x *SearchArticleResp) Reset() {
	*x = SearchArticleResp{}
	mi := &file_article_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchArticleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchArticleResp) ProtoMessage() {}

func (x *SearchArticleResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchArticleResp.ProtoReflect.Descriptor instead.
func (*SearchArticleResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{32}
}

func (x *SearchArticleResp) GetArticle() []*Article {
	if x != nil {
		return x.Article
	}
	return nil
}

// --------------------------------class--------------------------------
type Class struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classid     int64  `protobuf:"varint,1,opt,name=classid,proto3" json:"classid,omitempty"`        //classid
	Classnum    int64  `protobuf:"varint,2,opt,name=classnum,proto3" json:"classnum,omitempty"`      //classnum
	Classcourse string `protobuf:"bytes,3,opt,name=classcourse,proto3" json:"classcourse,omitempty"` //classcourse
}

func (x *Class) Reset() {
	*x = Class{}
	mi := &file_article_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Class) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Class) ProtoMessage() {}

func (x *Class) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Class.ProtoReflect.Descriptor instead.
func (*Class) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{33}
}

func (x *Class) GetClassid() int64 {
	if x != nil {
		return x.Classid
	}
	return 0
}

func (x *Class) GetClassnum() int64 {
	if x != nil {
		return x.Classnum
	}
	return 0
}

func (x *Class) GetClasscourse() string {
	if x != nil {
		return x.Classcourse
	}
	return ""
}

type AddClassReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classid     int64  `protobuf:"varint,1,opt,name=classid,proto3" json:"classid,omitempty"`        //classid
	Classnum    int64  `protobuf:"varint,2,opt,name=classnum,proto3" json:"classnum,omitempty"`      //classnum
	Classcourse string `protobuf:"bytes,3,opt,name=classcourse,proto3" json:"classcourse,omitempty"` //classcourse
}

func (x *AddClassReq) Reset() {
	*x = AddClassReq{}
	mi := &file_article_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddClassReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClassReq) ProtoMessage() {}

func (x *AddClassReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClassReq.ProtoReflect.Descriptor instead.
func (*AddClassReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{34}
}

func (x *AddClassReq) GetClassid() int64 {
	if x != nil {
		return x.Classid
	}
	return 0
}

func (x *AddClassReq) GetClassnum() int64 {
	if x != nil {
		return x.Classnum
	}
	return 0
}

func (x *AddClassReq) GetClasscourse() string {
	if x != nil {
		return x.Classcourse
	}
	return ""
}

type AddClassResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddClassResp) Reset() {
	*x = AddClassResp{}
	mi := &file_article_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddClassResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClassResp) ProtoMessage() {}

func (x *AddClassResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClassResp.ProtoReflect.Descriptor instead.
func (*AddClassResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{35}
}

type UpdateClassReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classid     int64  `protobuf:"varint,1,opt,name=classid,proto3" json:"classid,omitempty"`        //classid
	Classnum    int64  `protobuf:"varint,2,opt,name=classnum,proto3" json:"classnum,omitempty"`      //classnum
	Classcourse string `protobuf:"bytes,3,opt,name=classcourse,proto3" json:"classcourse,omitempty"` //classcourse
}

func (x *UpdateClassReq) Reset() {
	*x = UpdateClassReq{}
	mi := &file_article_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClassReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClassReq) ProtoMessage() {}

func (x *UpdateClassReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClassReq.ProtoReflect.Descriptor instead.
func (*UpdateClassReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateClassReq) GetClassid() int64 {
	if x != nil {
		return x.Classid
	}
	return 0
}

func (x *UpdateClassReq) GetClassnum() int64 {
	if x != nil {
		return x.Classnum
	}
	return 0
}

func (x *UpdateClassReq) GetClasscourse() string {
	if x != nil {
		return x.Classcourse
	}
	return ""
}

type UpdateClassResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateClassResp) Reset() {
	*x = UpdateClassResp{}
	mi := &file_article_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClassResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClassResp) ProtoMessage() {}

func (x *UpdateClassResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClassResp.ProtoReflect.Descriptor instead.
func (*UpdateClassResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{37}
}

type DelClassReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelClassReq) Reset() {
	*x = DelClassReq{}
	mi := &file_article_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelClassReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelClassReq) ProtoMessage() {}

func (x *DelClassReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelClassReq.ProtoReflect.Descriptor instead.
func (*DelClassReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{38}
}

func (x *DelClassReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelClassResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelClassResp) Reset() {
	*x = DelClassResp{}
	mi := &file_article_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelClassResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelClassResp) ProtoMessage() {}

func (x *DelClassResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelClassResp.ProtoReflect.Descriptor instead.
func (*DelClassResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{39}
}

type GetClassByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetClassByIdReq) Reset() {
	*x = GetClassByIdReq{}
	mi := &file_article_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClassByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassByIdReq) ProtoMessage() {}

func (x *GetClassByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassByIdReq.ProtoReflect.Descriptor instead.
func (*GetClassByIdReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{40}
}

func (x *GetClassByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetClassByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Class *Class `protobuf:"bytes,1,opt,name=class,proto3" json:"class,omitempty"` //class
}

func (x *GetClassByIdResp) Reset() {
	*x = GetClassByIdResp{}
	mi := &file_article_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClassByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClassByIdResp) ProtoMessage() {}

func (x *GetClassByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClassByIdResp.ProtoReflect.Descriptor instead.
func (*GetClassByIdResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{41}
}

func (x *GetClassByIdResp) GetClass() *Class {
	if x != nil {
		return x.Class
	}
	return nil
}

type SearchClassReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`              //page
	Limit       int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`            //limit
	Classid     int64  `protobuf:"varint,3,opt,name=classid,proto3" json:"classid,omitempty"`        //classid
	Classnum    int64  `protobuf:"varint,4,opt,name=classnum,proto3" json:"classnum,omitempty"`      //classnum
	Classcourse string `protobuf:"bytes,5,opt,name=classcourse,proto3" json:"classcourse,omitempty"` //classcourse
}

func (x *SearchClassReq) Reset() {
	*x = SearchClassReq{}
	mi := &file_article_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchClassReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchClassReq) ProtoMessage() {}

func (x *SearchClassReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchClassReq.ProtoReflect.Descriptor instead.
func (*SearchClassReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{42}
}

func (x *SearchClassReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchClassReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchClassReq) GetClassid() int64 {
	if x != nil {
		return x.Classid
	}
	return 0
}

func (x *SearchClassReq) GetClassnum() int64 {
	if x != nil {
		return x.Classnum
	}
	return 0
}

func (x *SearchClassReq) GetClasscourse() string {
	if x != nil {
		return x.Classcourse
	}
	return ""
}

type SearchClassResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Class []*Class `protobuf:"bytes,1,rep,name=class,proto3" json:"class,omitempty"` //class
}

func (x *SearchClassResp) Reset() {
	*x = SearchClassResp{}
	mi := &file_article_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchClassResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchClassResp) ProtoMessage() {}

func (x *SearchClassResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchClassResp.ProtoReflect.Descriptor instead.
func (*SearchClassResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{43}
}

func (x *SearchClassResp) GetClass() []*Class {
	if x != nil {
		return x.Class
	}
	return nil
}

// --------------------------------clusterInfo--------------------------------
type ClusterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //id
	ClusterName string `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"` //clusterName
	FileName    string `protobuf:"bytes,3,opt,name=fileName,proto3" json:"fileName,omitempty"`       //fileName
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`               //type
	Dir         string `protobuf:"bytes,5,opt,name=dir,proto3" json:"dir,omitempty"`                 //dir
	UserUuid    string `protobuf:"bytes,6,opt,name=userUuid,proto3" json:"userUuid,omitempty"`       //userUuid
	Status      int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`          //status
	CreatedAt   int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //createdAt
}

func (x *ClusterInfo) Reset() {
	*x = ClusterInfo{}
	mi := &file_article_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterInfo) ProtoMessage() {}

func (x *ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterInfo.ProtoReflect.Descriptor instead.
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{44}
}

func (x *ClusterInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ClusterInfo) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ClusterInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ClusterInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ClusterInfo) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *ClusterInfo) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *ClusterInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ClusterInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type AddClusterInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string `protobuf:"bytes,1,opt,name=clusterName,proto3" json:"clusterName,omitempty"` //clusterName
	FileName    string `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`       //fileName
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`               //type
	Dir         string `protobuf:"bytes,4,opt,name=dir,proto3" json:"dir,omitempty"`                 //dir
	UserUuid    string `protobuf:"bytes,5,opt,name=userUuid,proto3" json:"userUuid,omitempty"`       //userUuid
	Status      int64  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`          //status
	CreatedAt   int64  `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //createdAt
}

func (x *AddClusterInfoReq) Reset() {
	*x = AddClusterInfoReq{}
	mi := &file_article_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddClusterInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClusterInfoReq) ProtoMessage() {}

func (x *AddClusterInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClusterInfoReq.ProtoReflect.Descriptor instead.
func (*AddClusterInfoReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{45}
}

func (x *AddClusterInfoReq) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *AddClusterInfoReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *AddClusterInfoReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AddClusterInfoReq) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *AddClusterInfoReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *AddClusterInfoReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddClusterInfoReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type AddClusterInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddClusterInfoResp) Reset() {
	*x = AddClusterInfoResp{}
	mi := &file_article_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddClusterInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClusterInfoResp) ProtoMessage() {}

func (x *AddClusterInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClusterInfoResp.ProtoReflect.Descriptor instead.
func (*AddClusterInfoResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{46}
}

type UpdateClusterInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  //id
	ClusterName string `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"` //clusterName
	FileName    string `protobuf:"bytes,3,opt,name=fileName,proto3" json:"fileName,omitempty"`       //fileName
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`               //type
	Dir         string `protobuf:"bytes,5,opt,name=dir,proto3" json:"dir,omitempty"`                 //dir
	UserUuid    string `protobuf:"bytes,6,opt,name=userUuid,proto3" json:"userUuid,omitempty"`       //userUuid
	Status      int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`          //status
	CreatedAt   int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`    //createdAt
}

func (x *UpdateClusterInfoReq) Reset() {
	*x = UpdateClusterInfoReq{}
	mi := &file_article_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterInfoReq) ProtoMessage() {}

func (x *UpdateClusterInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateClusterInfoReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateClusterInfoReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateClusterInfoReq) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *UpdateClusterInfoReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UpdateClusterInfoReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateClusterInfoReq) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *UpdateClusterInfoReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *UpdateClusterInfoReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateClusterInfoReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type UpdateClusterInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateClusterInfoResp) Reset() {
	*x = UpdateClusterInfoResp{}
	mi := &file_article_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateClusterInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterInfoResp) ProtoMessage() {}

func (x *UpdateClusterInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterInfoResp.ProtoReflect.Descriptor instead.
func (*UpdateClusterInfoResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{48}
}

type DelClusterInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelClusterInfoReq) Reset() {
	*x = DelClusterInfoReq{}
	mi := &file_article_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelClusterInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelClusterInfoReq) ProtoMessage() {}

func (x *DelClusterInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelClusterInfoReq.ProtoReflect.Descriptor instead.
func (*DelClusterInfoReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{49}
}

func (x *DelClusterInfoReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelClusterInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelClusterInfoResp) Reset() {
	*x = DelClusterInfoResp{}
	mi := &file_article_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelClusterInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelClusterInfoResp) ProtoMessage() {}

func (x *DelClusterInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelClusterInfoResp.ProtoReflect.Descriptor instead.
func (*DelClusterInfoResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{50}
}

type GetClusterInfoByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetClusterInfoByIdReq) Reset() {
	*x = GetClusterInfoByIdReq{}
	mi := &file_article_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterInfoByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterInfoByIdReq) ProtoMessage() {}

func (x *GetClusterInfoByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterInfoByIdReq.ProtoReflect.Descriptor instead.
func (*GetClusterInfoByIdReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{51}
}

func (x *GetClusterInfoByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetClusterInfoByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterInfo *ClusterInfo `protobuf:"bytes,1,opt,name=clusterInfo,proto3" json:"clusterInfo,omitempty"` //clusterInfo
}

func (x *GetClusterInfoByIdResp) Reset() {
	*x = GetClusterInfoByIdResp{}
	mi := &file_article_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterInfoByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterInfoByIdResp) ProtoMessage() {}

func (x *GetClusterInfoByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterInfoByIdResp.ProtoReflect.Descriptor instead.
func (*GetClusterInfoByIdResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{52}
}

func (x *GetClusterInfoByIdResp) GetClusterInfo() *ClusterInfo {
	if x != nil {
		return x.ClusterInfo
	}
	return nil
}

type SearchClusterInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`              //page
	Limit       int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`            //limit
	Id          int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                  //id
	ClusterName string `protobuf:"bytes,4,opt,name=clusterName,proto3" json:"clusterName,omitempty"` //clusterName
	FileName    string `protobuf:"bytes,5,opt,name=fileName,proto3" json:"fileName,omitempty"`       //fileName
	Type        string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`               //type
	Dir         string `protobuf:"bytes,7,opt,name=dir,proto3" json:"dir,omitempty"`                 //dir
	UserUuid    string `protobuf:"bytes,8,opt,name=userUuid,proto3" json:"userUuid,omitempty"`       //userUuid
	Status      int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`          //status
	CreatedAt   int64  `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`   //createdAt
}

func (x *SearchClusterInfoReq) Reset() {
	*x = SearchClusterInfoReq{}
	mi := &file_article_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchClusterInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchClusterInfoReq) ProtoMessage() {}

func (x *SearchClusterInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchClusterInfoReq.ProtoReflect.Descriptor instead.
func (*SearchClusterInfoReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{53}
}

func (x *SearchClusterInfoReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchClusterInfoReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchClusterInfoReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchClusterInfoReq) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *SearchClusterInfoReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *SearchClusterInfoReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SearchClusterInfoReq) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *SearchClusterInfoReq) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

func (x *SearchClusterInfoReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchClusterInfoReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type SearchClusterInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterInfo []*ClusterInfo `protobuf:"bytes,1,rep,name=clusterInfo,proto3" json:"clusterInfo,omitempty"` //clusterInfo
}

func (x *SearchClusterInfoResp) Reset() {
	*x = SearchClusterInfoResp{}
	mi := &file_article_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchClusterInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchClusterInfoResp) ProtoMessage() {}

func (x *SearchClusterInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchClusterInfoResp.ProtoReflect.Descriptor instead.
func (*SearchClusterInfoResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{54}
}

func (x *SearchClusterInfoResp) GetClusterInfo() []*ClusterInfo {
	if x != nil {
		return x.ClusterInfo
	}
	return nil
}

// --------------------------------course--------------------------------
type Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //id
	Coursename string `protobuf:"bytes,2,opt,name=coursename,proto3" json:"coursename,omitempty"` //coursename
}

func (x *Course) Reset() {
	*x = Course{}
	mi := &file_article_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Course) ProtoMessage() {}

func (x *Course) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Course.ProtoReflect.Descriptor instead.
func (*Course) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{55}
}

func (x *Course) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Course) GetCoursename() string {
	if x != nil {
		return x.Coursename
	}
	return ""
}

type AddCourseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coursename string `protobuf:"bytes,1,opt,name=coursename,proto3" json:"coursename,omitempty"` //coursename
}

func (x *AddCourseReq) Reset() {
	*x = AddCourseReq{}
	mi := &file_article_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCourseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCourseReq) ProtoMessage() {}

func (x *AddCourseReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCourseReq.ProtoReflect.Descriptor instead.
func (*AddCourseReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{56}
}

func (x *AddCourseReq) GetCoursename() string {
	if x != nil {
		return x.Coursename
	}
	return ""
}

type AddCourseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCourseResp) Reset() {
	*x = AddCourseResp{}
	mi := &file_article_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCourseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCourseResp) ProtoMessage() {}

func (x *AddCourseResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCourseResp.ProtoReflect.Descriptor instead.
func (*AddCourseResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{57}
}

type UpdateCourseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //id
	Coursename string `protobuf:"bytes,2,opt,name=coursename,proto3" json:"coursename,omitempty"` //coursename
}

func (x *UpdateCourseReq) Reset() {
	*x = UpdateCourseReq{}
	mi := &file_article_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCourseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourseReq) ProtoMessage() {}

func (x *UpdateCourseReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourseReq.ProtoReflect.Descriptor instead.
func (*UpdateCourseReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateCourseReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCourseReq) GetCoursename() string {
	if x != nil {
		return x.Coursename
	}
	return ""
}

type UpdateCourseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCourseResp) Reset() {
	*x = UpdateCourseResp{}
	mi := &file_article_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCourseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCourseResp) ProtoMessage() {}

func (x *UpdateCourseResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCourseResp.ProtoReflect.Descriptor instead.
func (*UpdateCourseResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{59}
}

type DelCourseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelCourseReq) Reset() {
	*x = DelCourseReq{}
	mi := &file_article_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelCourseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCourseReq) ProtoMessage() {}

func (x *DelCourseReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCourseReq.ProtoReflect.Descriptor instead.
func (*DelCourseReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{60}
}

func (x *DelCourseReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelCourseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelCourseResp) Reset() {
	*x = DelCourseResp{}
	mi := &file_article_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelCourseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCourseResp) ProtoMessage() {}

func (x *DelCourseResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCourseResp.ProtoReflect.Descriptor instead.
func (*DelCourseResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{61}
}

type GetCourseByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetCourseByIdReq) Reset() {
	*x = GetCourseByIdReq{}
	mi := &file_article_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCourseByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseByIdReq) ProtoMessage() {}

func (x *GetCourseByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseByIdReq.ProtoReflect.Descriptor instead.
func (*GetCourseByIdReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{62}
}

func (x *GetCourseByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCourseByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Course *Course `protobuf:"bytes,1,opt,name=course,proto3" json:"course,omitempty"` //course
}

func (x *GetCourseByIdResp) Reset() {
	*x = GetCourseByIdResp{}
	mi := &file_article_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCourseByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCourseByIdResp) ProtoMessage() {}

func (x *GetCourseByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCourseByIdResp.ProtoReflect.Descriptor instead.
func (*GetCourseByIdResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{63}
}

func (x *GetCourseByIdResp) GetCourse() *Course {
	if x != nil {
		return x.Course
	}
	return nil
}

type SearchCourseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`            //page
	Limit      int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`          //limit
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                //id
	Coursename string `protobuf:"bytes,4,opt,name=coursename,proto3" json:"coursename,omitempty"` //coursename
}

func (x *SearchCourseReq) Reset() {
	*x = SearchCourseReq{}
	mi := &file_article_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCourseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCourseReq) ProtoMessage() {}

func (x *SearchCourseReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCourseReq.ProtoReflect.Descriptor instead.
func (*SearchCourseReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{64}
}

func (x *SearchCourseReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchCourseReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchCourseReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchCourseReq) GetCoursename() string {
	if x != nil {
		return x.Coursename
	}
	return ""
}

type SearchCourseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Course []*Course `protobuf:"bytes,1,rep,name=course,proto3" json:"course,omitempty"` //course
}

func (x *SearchCourseResp) Reset() {
	*x = SearchCourseResp{}
	mi := &file_article_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCourseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCourseResp) ProtoMessage() {}

func (x *SearchCourseResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCourseResp.ProtoReflect.Descriptor instead.
func (*SearchCourseResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{65}
}

func (x *SearchCourseResp) GetCourse() []*Course {
	if x != nil {
		return x.Course
	}
	return nil
}

// --------------------------------Custer--------------------------------
type Custer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`      //Id
	Name  string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`   //鍚嶅瓧
	Age   int64  `protobuf:"varint,3,opt,name=Age,proto3" json:"Age,omitempty"`    //骞撮緞
	Phone string `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"` //鐢佃瘽
	Emil  string `protobuf:"bytes,5,opt,name=Emil,proto3" json:"Emil,omitempty"`   //閭欢
	City  string `protobuf:"bytes,6,opt,name=City,proto3" json:"City,omitempty"`   //鍩庡競
}

func (x *Custer) Reset() {
	*x = Custer{}
	mi := &file_article_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Custer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Custer) ProtoMessage() {}

func (x *Custer) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Custer.ProtoReflect.Descriptor instead.
func (*Custer) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{66}
}

func (x *Custer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Custer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Custer) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Custer) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Custer) GetEmil() string {
	if x != nil {
		return x.Emil
	}
	return ""
}

func (x *Custer) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type AddCusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`      //Id
	Name  string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`   //鍚嶅瓧
	Age   int64  `protobuf:"varint,3,opt,name=Age,proto3" json:"Age,omitempty"`    //骞撮緞
	Phone string `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"` //鐢佃瘽
	Emil  string `protobuf:"bytes,5,opt,name=Emil,proto3" json:"Emil,omitempty"`   //閭欢
	City  string `protobuf:"bytes,6,opt,name=City,proto3" json:"City,omitempty"`   //鍩庡競
}

func (x *AddCusterReq) Reset() {
	*x = AddCusterReq{}
	mi := &file_article_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCusterReq) ProtoMessage() {}

func (x *AddCusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCusterReq.ProtoReflect.Descriptor instead.
func (*AddCusterReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{67}
}

func (x *AddCusterReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddCusterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddCusterReq) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *AddCusterReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *AddCusterReq) GetEmil() string {
	if x != nil {
		return x.Emil
	}
	return ""
}

func (x *AddCusterReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type AddCusterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCusterResp) Reset() {
	*x = AddCusterResp{}
	mi := &file_article_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCusterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCusterResp) ProtoMessage() {}

func (x *AddCusterResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCusterResp.ProtoReflect.Descriptor instead.
func (*AddCusterResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{68}
}

type UpdateCusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`      //Id
	Name  string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`   //鍚嶅瓧
	Age   int64  `protobuf:"varint,3,opt,name=Age,proto3" json:"Age,omitempty"`    //骞撮緞
	Phone string `protobuf:"bytes,4,opt,name=Phone,proto3" json:"Phone,omitempty"` //鐢佃瘽
	Emil  string `protobuf:"bytes,5,opt,name=Emil,proto3" json:"Emil,omitempty"`   //閭欢
	City  string `protobuf:"bytes,6,opt,name=City,proto3" json:"City,omitempty"`   //鍩庡競
}

func (x *UpdateCusterReq) Reset() {
	*x = UpdateCusterReq{}
	mi := &file_article_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCusterReq) ProtoMessage() {}

func (x *UpdateCusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCusterReq.ProtoReflect.Descriptor instead.
func (*UpdateCusterReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{69}
}

func (x *UpdateCusterReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCusterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCusterReq) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UpdateCusterReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateCusterReq) GetEmil() string {
	if x != nil {
		return x.Emil
	}
	return ""
}

func (x *UpdateCusterReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type UpdateCusterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCusterResp) Reset() {
	*x = UpdateCusterResp{}
	mi := &file_article_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCusterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCusterResp) ProtoMessage() {}

func (x *UpdateCusterResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCusterResp.ProtoReflect.Descriptor instead.
func (*UpdateCusterResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{70}
}

type DelCusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelCusterReq) Reset() {
	*x = DelCusterReq{}
	mi := &file_article_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelCusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCusterReq) ProtoMessage() {}

func (x *DelCusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCusterReq.ProtoReflect.Descriptor instead.
func (*DelCusterReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{71}
}

func (x *DelCusterReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelCusterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelCusterResp) Reset() {
	*x = DelCusterResp{}
	mi := &file_article_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelCusterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCusterResp) ProtoMessage() {}

func (x *DelCusterResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCusterResp.ProtoReflect.Descriptor instead.
func (*DelCusterResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{72}
}

type GetCusterByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetCusterByIdReq) Reset() {
	*x = GetCusterByIdReq{}
	mi := &file_article_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCusterByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCusterByIdReq) ProtoMessage() {}

func (x *GetCusterByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCusterByIdReq.ProtoReflect.Descriptor instead.
func (*GetCusterByIdReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{73}
}

func (x *GetCusterByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCusterByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Custer *Custer `protobuf:"bytes,1,opt,name=custer,proto3" json:"custer,omitempty"` //custer
}

func (x *GetCusterByIdResp) Reset() {
	*x = GetCusterByIdResp{}
	mi := &file_article_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCusterByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCusterByIdResp) ProtoMessage() {}

func (x *GetCusterByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCusterByIdResp.ProtoReflect.Descriptor instead.
func (*GetCusterByIdResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{74}
}

func (x *GetCusterByIdResp) GetCuster() *Custer {
	if x != nil {
		return x.Custer
	}
	return nil
}

type SearchCusterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   //page
	Limit int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` //limit
	Id    int64  `protobuf:"varint,3,opt,name=Id,proto3" json:"Id,omitempty"`       //Id
	Name  string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`    //鍚嶅瓧
	Age   int64  `protobuf:"varint,5,opt,name=Age,proto3" json:"Age,omitempty"`     //骞撮緞
	Phone string `protobuf:"bytes,6,opt,name=Phone,proto3" json:"Phone,omitempty"`  //鐢佃瘽
	Emil  string `protobuf:"bytes,7,opt,name=Emil,proto3" json:"Emil,omitempty"`    //閭欢
	City  string `protobuf:"bytes,8,opt,name=City,proto3" json:"City,omitempty"`    //鍩庡競
}

func (x *SearchCusterReq) Reset() {
	*x = SearchCusterReq{}
	mi := &file_article_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCusterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCusterReq) ProtoMessage() {}

func (x *SearchCusterReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCusterReq.ProtoReflect.Descriptor instead.
func (*SearchCusterReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{75}
}

func (x *SearchCusterReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchCusterReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchCusterReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchCusterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchCusterReq) GetAge() int64 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *SearchCusterReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SearchCusterReq) GetEmil() string {
	if x != nil {
		return x.Emil
	}
	return ""
}

func (x *SearchCusterReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type SearchCusterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Custer []*Custer `protobuf:"bytes,1,rep,name=custer,proto3" json:"custer,omitempty"` //custer
}

func (x *SearchCusterResp) Reset() {
	*x = SearchCusterResp{}
	mi := &file_article_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCusterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCusterResp) ProtoMessage() {}

func (x *SearchCusterResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCusterResp.ProtoReflect.Descriptor instead.
func (*SearchCusterResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{76}
}

func (x *SearchCusterResp) GetCuster() []*Custer {
	if x != nil {
		return x.Custer
	}
	return nil
}

// --------------------------------student--------------------------------
type Student struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`       //id
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`    //name
	Class int64  `protobuf:"varint,3,opt,name=class,proto3" json:"class,omitempty"` //class
}

func (x *Student) Reset() {
	*x = Student{}
	mi := &file_article_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Student) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Student) ProtoMessage() {}

func (x *Student) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Student.ProtoReflect.Descriptor instead.
func (*Student) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{77}
}

func (x *Student) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Student) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Student) GetClass() int64 {
	if x != nil {
		return x.Class
	}
	return 0
}

type AddStudentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`    //name
	Class int64  `protobuf:"varint,2,opt,name=class,proto3" json:"class,omitempty"` //class
}

func (x *AddStudentReq) Reset() {
	*x = AddStudentReq{}
	mi := &file_article_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddStudentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStudentReq) ProtoMessage() {}

func (x *AddStudentReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStudentReq.ProtoReflect.Descriptor instead.
func (*AddStudentReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{78}
}

func (x *AddStudentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddStudentReq) GetClass() int64 {
	if x != nil {
		return x.Class
	}
	return 0
}

type AddStudentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddStudentResp) Reset() {
	*x = AddStudentResp{}
	mi := &file_article_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddStudentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStudentResp) ProtoMessage() {}

func (x *AddStudentResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStudentResp.ProtoReflect.Descriptor instead.
func (*AddStudentResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{79}
}

type UpdateStudentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`       //id
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`    //name
	Class int64  `protobuf:"varint,3,opt,name=class,proto3" json:"class,omitempty"` //class
}

func (x *UpdateStudentReq) Reset() {
	*x = UpdateStudentReq{}
	mi := &file_article_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentReq) ProtoMessage() {}

func (x *UpdateStudentReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentReq.ProtoReflect.Descriptor instead.
func (*UpdateStudentReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{80}
}

func (x *UpdateStudentReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateStudentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateStudentReq) GetClass() int64 {
	if x != nil {
		return x.Class
	}
	return 0
}

type UpdateStudentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStudentResp) Reset() {
	*x = UpdateStudentResp{}
	mi := &file_article_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentResp) ProtoMessage() {}

func (x *UpdateStudentResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentResp.ProtoReflect.Descriptor instead.
func (*UpdateStudentResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{81}
}

type DelStudentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelStudentReq) Reset() {
	*x = DelStudentReq{}
	mi := &file_article_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelStudentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStudentReq) ProtoMessage() {}

func (x *DelStudentReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStudentReq.ProtoReflect.Descriptor instead.
func (*DelStudentReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{82}
}

func (x *DelStudentReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelStudentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelStudentResp) Reset() {
	*x = DelStudentResp{}
	mi := &file_article_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelStudentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStudentResp) ProtoMessage() {}

func (x *DelStudentResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStudentResp.ProtoReflect.Descriptor instead.
func (*DelStudentResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{83}
}

type GetStudentByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetStudentByIdReq) Reset() {
	*x = GetStudentByIdReq{}
	mi := &file_article_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentByIdReq) ProtoMessage() {}

func (x *GetStudentByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentByIdReq.ProtoReflect.Descriptor instead.
func (*GetStudentByIdReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{84}
}

func (x *GetStudentByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetStudentByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Student *Student `protobuf:"bytes,1,opt,name=student,proto3" json:"student,omitempty"` //student
}

func (x *GetStudentByIdResp) Reset() {
	*x = GetStudentByIdResp{}
	mi := &file_article_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentByIdResp) ProtoMessage() {}

func (x *GetStudentByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentByIdResp.ProtoReflect.Descriptor instead.
func (*GetStudentByIdResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{85}
}

func (x *GetStudentByIdResp) GetStudent() *Student {
	if x != nil {
		return x.Student
	}
	return nil
}

type SearchStudentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`   //page
	Limit int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` //limit
	Id    int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`       //id
	Name  string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`    //name
	Class int64  `protobuf:"varint,5,opt,name=class,proto3" json:"class,omitempty"` //class
}

func (x *SearchStudentReq) Reset() {
	*x = SearchStudentReq{}
	mi := &file_article_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchStudentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStudentReq) ProtoMessage() {}

func (x *SearchStudentReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStudentReq.ProtoReflect.Descriptor instead.
func (*SearchStudentReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{86}
}

func (x *SearchStudentReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchStudentReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchStudentReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchStudentReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchStudentReq) GetClass() int64 {
	if x != nil {
		return x.Class
	}
	return 0
}

type SearchStudentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Student []*Student `protobuf:"bytes,1,rep,name=student,proto3" json:"student,omitempty"` //student
}

func (x *SearchStudentResp) Reset() {
	*x = SearchStudentResp{}
	mi := &file_article_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchStudentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStudentResp) ProtoMessage() {}

func (x *SearchStudentResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStudentResp.ProtoReflect.Descriptor instead.
func (*SearchStudentResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{87}
}

func (x *SearchStudentResp) GetStudent() []*Student {
	if x != nil {
		return x.Student
	}
	return nil
}

// --------------------------------studentCourse--------------------------------
type StudentCourse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId int64 `protobuf:"varint,1,opt,name=studentId,proto3" json:"studentId,omitempty"` //studentId
	CourseId  int64 `protobuf:"varint,2,opt,name=courseId,proto3" json:"courseId,omitempty"`   //courseId
}

func (x *StudentCourse) Reset() {
	*x = StudentCourse{}
	mi := &file_article_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StudentCourse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentCourse) ProtoMessage() {}

func (x *StudentCourse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentCourse.ProtoReflect.Descriptor instead.
func (*StudentCourse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{88}
}

func (x *StudentCourse) GetStudentId() int64 {
	if x != nil {
		return x.StudentId
	}
	return 0
}

func (x *StudentCourse) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type AddStudentCourseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId int64 `protobuf:"varint,1,opt,name=studentId,proto3" json:"studentId,omitempty"` //studentId
	CourseId  int64 `protobuf:"varint,2,opt,name=courseId,proto3" json:"courseId,omitempty"`   //courseId
}

func (x *AddStudentCourseReq) Reset() {
	*x = AddStudentCourseReq{}
	mi := &file_article_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddStudentCourseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStudentCourseReq) ProtoMessage() {}

func (x *AddStudentCourseReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStudentCourseReq.ProtoReflect.Descriptor instead.
func (*AddStudentCourseReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{89}
}

func (x *AddStudentCourseReq) GetStudentId() int64 {
	if x != nil {
		return x.StudentId
	}
	return 0
}

func (x *AddStudentCourseReq) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type AddStudentCourseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddStudentCourseResp) Reset() {
	*x = AddStudentCourseResp{}
	mi := &file_article_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddStudentCourseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStudentCourseResp) ProtoMessage() {}

func (x *AddStudentCourseResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStudentCourseResp.ProtoReflect.Descriptor instead.
func (*AddStudentCourseResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{90}
}

type UpdateStudentCourseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId int64 `protobuf:"varint,1,opt,name=studentId,proto3" json:"studentId,omitempty"` //studentId
	CourseId  int64 `protobuf:"varint,2,opt,name=courseId,proto3" json:"courseId,omitempty"`   //courseId
}

func (x *UpdateStudentCourseReq) Reset() {
	*x = UpdateStudentCourseReq{}
	mi := &file_article_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudentCourseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentCourseReq) ProtoMessage() {}

func (x *UpdateStudentCourseReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentCourseReq.ProtoReflect.Descriptor instead.
func (*UpdateStudentCourseReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{91}
}

func (x *UpdateStudentCourseReq) GetStudentId() int64 {
	if x != nil {
		return x.StudentId
	}
	return 0
}

func (x *UpdateStudentCourseReq) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type UpdateStudentCourseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateStudentCourseResp) Reset() {
	*x = UpdateStudentCourseResp{}
	mi := &file_article_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStudentCourseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentCourseResp) ProtoMessage() {}

func (x *UpdateStudentCourseResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentCourseResp.ProtoReflect.Descriptor instead.
func (*UpdateStudentCourseResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{92}
}

type DelStudentCourseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelStudentCourseReq) Reset() {
	*x = DelStudentCourseReq{}
	mi := &file_article_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelStudentCourseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStudentCourseReq) ProtoMessage() {}

func (x *DelStudentCourseReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStudentCourseReq.ProtoReflect.Descriptor instead.
func (*DelStudentCourseReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{93}
}

func (x *DelStudentCourseReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelStudentCourseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelStudentCourseResp) Reset() {
	*x = DelStudentCourseResp{}
	mi := &file_article_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelStudentCourseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStudentCourseResp) ProtoMessage() {}

func (x *DelStudentCourseResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStudentCourseResp.ProtoReflect.Descriptor instead.
func (*DelStudentCourseResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{94}
}

type GetStudentCourseByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetStudentCourseByIdReq) Reset() {
	*x = GetStudentCourseByIdReq{}
	mi := &file_article_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentCourseByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentCourseByIdReq) ProtoMessage() {}

func (x *GetStudentCourseByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentCourseByIdReq.ProtoReflect.Descriptor instead.
func (*GetStudentCourseByIdReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{95}
}

func (x *GetStudentCourseByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetStudentCourseByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentCourse *StudentCourse `protobuf:"bytes,1,opt,name=studentCourse,proto3" json:"studentCourse,omitempty"` //studentCourse
}

func (x *GetStudentCourseByIdResp) Reset() {
	*x = GetStudentCourseByIdResp{}
	mi := &file_article_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStudentCourseByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentCourseByIdResp) ProtoMessage() {}

func (x *GetStudentCourseByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentCourseByIdResp.ProtoReflect.Descriptor instead.
func (*GetStudentCourseByIdResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{96}
}

func (x *GetStudentCourseByIdResp) GetStudentCourse() *StudentCourse {
	if x != nil {
		return x.StudentCourse
	}
	return nil
}

type SearchStudentCourseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`           //page
	Limit     int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`         //limit
	StudentId int64 `protobuf:"varint,3,opt,name=studentId,proto3" json:"studentId,omitempty"` //studentId
	CourseId  int64 `protobuf:"varint,4,opt,name=courseId,proto3" json:"courseId,omitempty"`   //courseId
}

func (x *SearchStudentCourseReq) Reset() {
	*x = SearchStudentCourseReq{}
	mi := &file_article_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchStudentCourseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStudentCourseReq) ProtoMessage() {}

func (x *SearchStudentCourseReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStudentCourseReq.ProtoReflect.Descriptor instead.
func (*SearchStudentCourseReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{97}
}

func (x *SearchStudentCourseReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchStudentCourseReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchStudentCourseReq) GetStudentId() int64 {
	if x != nil {
		return x.StudentId
	}
	return 0
}

func (x *SearchStudentCourseReq) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

type SearchStudentCourseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentCourse []*StudentCourse `protobuf:"bytes,1,rep,name=studentCourse,proto3" json:"studentCourse,omitempty"` //studentCourse
}

func (x *SearchStudentCourseResp) Reset() {
	*x = SearchStudentCourseResp{}
	mi := &file_article_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchStudentCourseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStudentCourseResp) ProtoMessage() {}

func (x *SearchStudentCourseResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStudentCourseResp.ProtoReflect.Descriptor instead.
func (*SearchStudentCourseResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{98}
}

func (x *SearchStudentCourseResp) GetStudentCourse() []*StudentCourse {
	if x != nil {
		return x.StudentCourse
	}
	return nil
}

// --------------------------------tasks--------------------------------
type Tasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //id
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`          //title
	Completed int64  `protobuf:"varint,3,opt,name=completed,proto3" json:"completed,omitempty"` //completed
}

func (x *Tasks) Reset() {
	*x = Tasks{}
	mi := &file_article_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tasks) ProtoMessage() {}

func (x *Tasks) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tasks.ProtoReflect.Descriptor instead.
func (*Tasks) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{99}
}

func (x *Tasks) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tasks) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Tasks) GetCompleted() int64 {
	if x != nil {
		return x.Completed
	}
	return 0
}

type AddTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`          //title
	Completed int64  `protobuf:"varint,2,opt,name=completed,proto3" json:"completed,omitempty"` //completed
}

func (x *AddTasksReq) Reset() {
	*x = AddTasksReq{}
	mi := &file_article_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTasksReq) ProtoMessage() {}

func (x *AddTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTasksReq.ProtoReflect.Descriptor instead.
func (*AddTasksReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{100}
}

func (x *AddTasksReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddTasksReq) GetCompleted() int64 {
	if x != nil {
		return x.Completed
	}
	return 0
}

type AddTasksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTasksResp) Reset() {
	*x = AddTasksResp{}
	mi := &file_article_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTasksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTasksResp) ProtoMessage() {}

func (x *AddTasksResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTasksResp.ProtoReflect.Descriptor instead.
func (*AddTasksResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{101}
}

type UpdateTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`               //id
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`          //title
	Completed int64  `protobuf:"varint,3,opt,name=completed,proto3" json:"completed,omitempty"` //completed
}

func (x *UpdateTasksReq) Reset() {
	*x = UpdateTasksReq{}
	mi := &file_article_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTasksReq) ProtoMessage() {}

func (x *UpdateTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTasksReq.ProtoReflect.Descriptor instead.
func (*UpdateTasksReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{102}
}

func (x *UpdateTasksReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTasksReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTasksReq) GetCompleted() int64 {
	if x != nil {
		return x.Completed
	}
	return 0
}

type UpdateTasksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTasksResp) Reset() {
	*x = UpdateTasksResp{}
	mi := &file_article_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTasksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTasksResp) ProtoMessage() {}

func (x *UpdateTasksResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTasksResp.ProtoReflect.Descriptor instead.
func (*UpdateTasksResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{103}
}

type DelTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelTasksReq) Reset() {
	*x = DelTasksReq{}
	mi := &file_article_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTasksReq) ProtoMessage() {}

func (x *DelTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTasksReq.ProtoReflect.Descriptor instead.
func (*DelTasksReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{104}
}

func (x *DelTasksReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelTasksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelTasksResp) Reset() {
	*x = DelTasksResp{}
	mi := &file_article_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelTasksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTasksResp) ProtoMessage() {}

func (x *DelTasksResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTasksResp.ProtoReflect.Descriptor instead.
func (*DelTasksResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{105}
}

type GetTasksByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetTasksByIdReq) Reset() {
	*x = GetTasksByIdReq{}
	mi := &file_article_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTasksByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByIdReq) ProtoMessage() {}

func (x *GetTasksByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByIdReq.ProtoReflect.Descriptor instead.
func (*GetTasksByIdReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{106}
}

func (x *GetTasksByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTasksByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks *Tasks `protobuf:"bytes,1,opt,name=tasks,proto3" json:"tasks,omitempty"` //tasks
}

func (x *GetTasksByIdResp) Reset() {
	*x = GetTasksByIdResp{}
	mi := &file_article_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTasksByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByIdResp) ProtoMessage() {}

func (x *GetTasksByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByIdResp.ProtoReflect.Descriptor instead.
func (*GetTasksByIdResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{107}
}

func (x *GetTasksByIdResp) GetTasks() *Tasks {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type SearchTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`           //page
	Limit     int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`         //limit
	Id        int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`               //id
	Title     string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`          //title
	Completed int64  `protobuf:"varint,5,opt,name=completed,proto3" json:"completed,omitempty"` //completed
}

func (x *SearchTasksReq) Reset() {
	*x = SearchTasksReq{}
	mi := &file_article_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTasksReq) ProtoMessage() {}

func (x *SearchTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTasksReq.ProtoReflect.Descriptor instead.
func (*SearchTasksReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{108}
}

func (x *SearchTasksReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchTasksReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchTasksReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchTasksReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchTasksReq) GetCompleted() int64 {
	if x != nil {
		return x.Completed
	}
	return 0
}

type SearchTasksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*Tasks `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"` //tasks
}

func (x *SearchTasksResp) Reset() {
	*x = SearchTasksResp{}
	mi := &file_article_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTasksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTasksResp) ProtoMessage() {}

func (x *SearchTasksResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTasksResp.ProtoReflect.Descriptor instead.
func (*SearchTasksResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{109}
}

func (x *SearchTasksResp) GetTasks() []*Tasks {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// --------------------------------userInfo--------------------------------
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`            //uuid
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`    //username
	Password  string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`    //password
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`          //email
	Roles     string `protobuf:"bytes,5,opt,name=roles,proto3" json:"roles,omitempty"`          //roles
	Avatar    string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`        //avatar
	Status    int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`       //status
	CreatedAt int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_article_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{110}
}

func (x *UserInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UserInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetRoles() string {
	if x != nil {
		return x.Roles
	}
	return ""
}

func (x *UserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type AddUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`            //uuid
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`    //username
	Password  string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`    //password
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`          //email
	Roles     string `protobuf:"bytes,5,opt,name=roles,proto3" json:"roles,omitempty"`          //roles
	Avatar    string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`        //avatar
	Status    int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`       //status
	CreatedAt int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
}

func (x *AddUserInfoReq) Reset() {
	*x = AddUserInfoReq{}
	mi := &file_article_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserInfoReq) ProtoMessage() {}

func (x *AddUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserInfoReq.ProtoReflect.Descriptor instead.
func (*AddUserInfoReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{111}
}

func (x *AddUserInfoReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AddUserInfoReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddUserInfoReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddUserInfoReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddUserInfoReq) GetRoles() string {
	if x != nil {
		return x.Roles
	}
	return ""
}

func (x *AddUserInfoReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AddUserInfoReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AddUserInfoReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type AddUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddUserInfoResp) Reset() {
	*x = AddUserInfoResp{}
	mi := &file_article_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserInfoResp) ProtoMessage() {}

func (x *AddUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserInfoResp.ProtoReflect.Descriptor instead.
func (*AddUserInfoResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{112}
}

type UpdateUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`            //uuid
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`    //username
	Password  string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`    //password
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`          //email
	Roles     string `protobuf:"bytes,5,opt,name=roles,proto3" json:"roles,omitempty"`          //roles
	Avatar    string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`        //avatar
	Status    int64  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`       //status
	CreatedAt int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
}

func (x *UpdateUserInfoReq) Reset() {
	*x = UpdateUserInfoReq{}
	mi := &file_article_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoReq) ProtoMessage() {}

func (x *UpdateUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{113}
}

func (x *UpdateUserInfoReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UpdateUserInfoReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateUserInfoReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateUserInfoReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateUserInfoReq) GetRoles() string {
	if x != nil {
		return x.Roles
	}
	return ""
}

func (x *UpdateUserInfoReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UpdateUserInfoReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateUserInfoReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type UpdateUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserInfoResp) Reset() {
	*x = UpdateUserInfoResp{}
	mi := &file_article_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoResp) ProtoMessage() {}

func (x *UpdateUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoResp.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{114}
}

type DelUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelUserInfoReq) Reset() {
	*x = DelUserInfoReq{}
	mi := &file_article_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserInfoReq) ProtoMessage() {}

func (x *DelUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserInfoReq.ProtoReflect.Descriptor instead.
func (*DelUserInfoReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{115}
}

func (x *DelUserInfoReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelUserInfoResp) Reset() {
	*x = DelUserInfoResp{}
	mi := &file_article_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUserInfoResp) ProtoMessage() {}

func (x *DelUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUserInfoResp.ProtoReflect.Descriptor instead.
func (*DelUserInfoResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{116}
}

type GetUserInfoByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetUserInfoByIdReq) Reset() {
	*x = GetUserInfoByIdReq{}
	mi := &file_article_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserInfoByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoByIdReq) ProtoMessage() {}

func (x *GetUserInfoByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoByIdReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoByIdReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{117}
}

func (x *GetUserInfoByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUserInfoByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *UserInfo `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo,omitempty"` //userInfo
}

func (x *GetUserInfoByIdResp) Reset() {
	*x = GetUserInfoByIdResp{}
	mi := &file_article_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserInfoByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoByIdResp) ProtoMessage() {}

func (x *GetUserInfoByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoByIdResp.ProtoReflect.Descriptor instead.
func (*GetUserInfoByIdResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{118}
}

func (x *GetUserInfoByIdResp) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type SearchUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`            //page
	Limit     int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`          //limit
	Uuid      string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`             //uuid
	Username  string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`     //username
	Password  string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`     //password
	Email     string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`           //email
	Roles     string `protobuf:"bytes,7,opt,name=roles,proto3" json:"roles,omitempty"`           //roles
	Avatar    string `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`         //avatar
	Status    int64  `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`        //status
	CreatedAt int64  `protobuf:"varint,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
}

func (x *SearchUserInfoReq) Reset() {
	*x = SearchUserInfoReq{}
	mi := &file_article_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserInfoReq) ProtoMessage() {}

func (x *SearchUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserInfoReq.ProtoReflect.Descriptor instead.
func (*SearchUserInfoReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{119}
}

func (x *SearchUserInfoReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchUserInfoReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchUserInfoReq) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SearchUserInfoReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SearchUserInfoReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SearchUserInfoReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SearchUserInfoReq) GetRoles() string {
	if x != nil {
		return x.Roles
	}
	return ""
}

func (x *SearchUserInfoReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SearchUserInfoReq) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchUserInfoReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type SearchUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo []*UserInfo `protobuf:"bytes,1,rep,name=userInfo,proto3" json:"userInfo,omitempty"` //userInfo
}

func (x *SearchUserInfoResp) Reset() {
	*x = SearchUserInfoResp{}
	mi := &file_article_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserInfoResp) ProtoMessage() {}

func (x *SearchUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserInfoResp.ProtoReflect.Descriptor instead.
func (*SearchUserInfoResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{120}
}

func (x *SearchUserInfoResp) GetUserInfo() []*UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

// --------------------------------workflow--------------------------------
type Workflow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //id
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             //name
	Namespace  string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`   //namespace
	Replicas   int64  `protobuf:"varint,4,opt,name=replicas,proto3" json:"replicas,omitempty"`    //replicas
	Deployment string `protobuf:"bytes,5,opt,name=deployment,proto3" json:"deployment,omitempty"` //deployment
	Service    string `protobuf:"bytes,6,opt,name=service,proto3" json:"service,omitempty"`       //service
	Ingress    string `protobuf:"bytes,7,opt,name=ingress,proto3" json:"ingress,omitempty"`       //ingress
	Type       string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`             //type
	CreatedAt  int64  `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`  //createdAt
	UpdatedAt  int64  `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //updatedAt
	DeletedAt  int64  `protobuf:"varint,11,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
}

func (x *Workflow) Reset() {
	*x = Workflow{}
	mi := &file_article_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Workflow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workflow) ProtoMessage() {}

func (x *Workflow) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workflow.ProtoReflect.Descriptor instead.
func (*Workflow) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{121}
}

func (x *Workflow) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Workflow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workflow) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Workflow) GetReplicas() int64 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *Workflow) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *Workflow) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Workflow) GetIngress() string {
	if x != nil {
		return x.Ingress
	}
	return ""
}

func (x *Workflow) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Workflow) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Workflow) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Workflow) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type AddWorkflowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`             //name
	Namespace  string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`   //namespace
	Replicas   int64  `protobuf:"varint,3,opt,name=replicas,proto3" json:"replicas,omitempty"`    //replicas
	Deployment string `protobuf:"bytes,4,opt,name=deployment,proto3" json:"deployment,omitempty"` //deployment
	Service    string `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`       //service
	Ingress    string `protobuf:"bytes,6,opt,name=ingress,proto3" json:"ingress,omitempty"`       //ingress
	Type       string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`             //type
	CreatedAt  int64  `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`  //createdAt
	UpdatedAt  int64  `protobuf:"varint,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`  //updatedAt
	DeletedAt  int64  `protobuf:"varint,10,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
}

func (x *AddWorkflowReq) Reset() {
	*x = AddWorkflowReq{}
	mi := &file_article_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWorkflowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorkflowReq) ProtoMessage() {}

func (x *AddWorkflowReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorkflowReq.ProtoReflect.Descriptor instead.
func (*AddWorkflowReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{122}
}

func (x *AddWorkflowReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddWorkflowReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AddWorkflowReq) GetReplicas() int64 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *AddWorkflowReq) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *AddWorkflowReq) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *AddWorkflowReq) GetIngress() string {
	if x != nil {
		return x.Ingress
	}
	return ""
}

func (x *AddWorkflowReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AddWorkflowReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddWorkflowReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AddWorkflowReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type AddWorkflowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddWorkflowResp) Reset() {
	*x = AddWorkflowResp{}
	mi := &file_article_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWorkflowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorkflowResp) ProtoMessage() {}

func (x *AddWorkflowResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorkflowResp.ProtoReflect.Descriptor instead.
func (*AddWorkflowResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{123}
}

type UpdateWorkflowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //id
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             //name
	Namespace  string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`   //namespace
	Replicas   int64  `protobuf:"varint,4,opt,name=replicas,proto3" json:"replicas,omitempty"`    //replicas
	Deployment string `protobuf:"bytes,5,opt,name=deployment,proto3" json:"deployment,omitempty"` //deployment
	Service    string `protobuf:"bytes,6,opt,name=service,proto3" json:"service,omitempty"`       //service
	Ingress    string `protobuf:"bytes,7,opt,name=ingress,proto3" json:"ingress,omitempty"`       //ingress
	Type       string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`             //type
	CreatedAt  int64  `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`  //createdAt
	UpdatedAt  int64  `protobuf:"varint,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //updatedAt
	DeletedAt  int64  `protobuf:"varint,11,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
}

func (x *UpdateWorkflowReq) Reset() {
	*x = UpdateWorkflowReq{}
	mi := &file_article_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowReq) ProtoMessage() {}

func (x *UpdateWorkflowReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowReq.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{124}
}

func (x *UpdateWorkflowReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateWorkflowReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateWorkflowReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateWorkflowReq) GetReplicas() int64 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *UpdateWorkflowReq) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *UpdateWorkflowReq) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *UpdateWorkflowReq) GetIngress() string {
	if x != nil {
		return x.Ingress
	}
	return ""
}

func (x *UpdateWorkflowReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateWorkflowReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UpdateWorkflowReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UpdateWorkflowReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type UpdateWorkflowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateWorkflowResp) Reset() {
	*x = UpdateWorkflowResp{}
	mi := &file_article_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowResp) ProtoMessage() {}

func (x *UpdateWorkflowResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowResp.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{125}
}

type DelWorkflowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelWorkflowReq) Reset() {
	*x = DelWorkflowReq{}
	mi := &file_article_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelWorkflowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelWorkflowReq) ProtoMessage() {}

func (x *DelWorkflowReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelWorkflowReq.ProtoReflect.Descriptor instead.
func (*DelWorkflowReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{126}
}

func (x *DelWorkflowReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelWorkflowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelWorkflowResp) Reset() {
	*x = DelWorkflowResp{}
	mi := &file_article_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelWorkflowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelWorkflowResp) ProtoMessage() {}

func (x *DelWorkflowResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelWorkflowResp.ProtoReflect.Descriptor instead.
func (*DelWorkflowResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{127}
}

type GetWorkflowByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetWorkflowByIdReq) Reset() {
	*x = GetWorkflowByIdReq{}
	mi := &file_article_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowByIdReq) ProtoMessage() {}

func (x *GetWorkflowByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowByIdReq.ProtoReflect.Descriptor instead.
func (*GetWorkflowByIdReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{128}
}

func (x *GetWorkflowByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetWorkflowByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow *Workflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"` //workflow
}

func (x *GetWorkflowByIdResp) Reset() {
	*x = GetWorkflowByIdResp{}
	mi := &file_article_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowByIdResp) ProtoMessage() {}

func (x *GetWorkflowByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowByIdResp.ProtoReflect.Descriptor instead.
func (*GetWorkflowByIdResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{129}
}

func (x *GetWorkflowByIdResp) GetWorkflow() *Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

type SearchWorkflowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`            //page
	Limit      int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`          //limit
	Id         int64  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                //id
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`             //name
	Namespace  string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`   //namespace
	Replicas   int64  `protobuf:"varint,6,opt,name=replicas,proto3" json:"replicas,omitempty"`    //replicas
	Deployment string `protobuf:"bytes,7,opt,name=deployment,proto3" json:"deployment,omitempty"` //deployment
	Service    string `protobuf:"bytes,8,opt,name=service,proto3" json:"service,omitempty"`       //service
	Ingress    string `protobuf:"bytes,9,opt,name=ingress,proto3" json:"ingress,omitempty"`       //ingress
	Type       string `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`            //type
	CreatedAt  int64  `protobuf:"varint,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //createdAt
	UpdatedAt  int64  `protobuf:"varint,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"` //updatedAt
	DeletedAt  int64  `protobuf:"varint,13,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"` //deletedAt
}

func (x *SearchWorkflowReq) Reset() {
	*x = SearchWorkflowReq{}
	mi := &file_article_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchWorkflowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchWorkflowReq) ProtoMessage() {}

func (x *SearchWorkflowReq) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchWorkflowReq.ProtoReflect.Descriptor instead.
func (*SearchWorkflowReq) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{130}
}

func (x *SearchWorkflowReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchWorkflowReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchWorkflowReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchWorkflowReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchWorkflowReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SearchWorkflowReq) GetReplicas() int64 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *SearchWorkflowReq) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *SearchWorkflowReq) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *SearchWorkflowReq) GetIngress() string {
	if x != nil {
		return x.Ingress
	}
	return ""
}

func (x *SearchWorkflowReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SearchWorkflowReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SearchWorkflowReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SearchWorkflowReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type SearchWorkflowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workflow []*Workflow `protobuf:"bytes,1,rep,name=workflow,proto3" json:"workflow,omitempty"` //workflow
}

func (x *SearchWorkflowResp) Reset() {
	*x = SearchWorkflowResp{}
	mi := &file_article_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchWorkflowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchWorkflowResp) ProtoMessage() {}

func (x *SearchWorkflowResp) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchWorkflowResp.ProtoReflect.Descriptor instead.
func (*SearchWorkflowResp) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{131}
}

func (x *SearchWorkflowResp) GetWorkflow() []*Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

var File_article_proto protoreflect.FileDescriptor

var file_article_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x22, 0x9f, 0x01, 0x0a, 0x05, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x41, 0x64, 0x64,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x0e, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa8, 0x01,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1f, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x05, 0x61, 0x64, 0x64,
	0x72, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x64, 0x64,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x22, 0x32, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x05, 0x61, 0x64,
	0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x73, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x22, 0xae, 0x02, 0x0a, 0x06,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f,
	0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa4, 0x02, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0xb7, 0x02, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x6a, 0x6f, 0x62, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x12,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x1e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x06,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x22, 0xe1, 0x02, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6a, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x36, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0x49, 0x0a, 0x07,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x52, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x13,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x25, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x7c, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3a, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x22, 0x5f, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x6e, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x6e, 0x75,
	0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x6e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x41, 0x64,
	0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x68, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x6e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x6e,
	0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a,
	0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x92,
	0x01, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x6e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x6e, 0x75,
	0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc9, 0x01,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22,
	0xdc, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x17,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x86, 0x02, 0x0a, 0x14, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x4a, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x38, 0x0a,
	0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x41, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x06, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x22, 0x6b, 0x0a,
	0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x10, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22,
	0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x22, 0x7c, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x41,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x6d, 0x69, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x45, 0x6d, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x43, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79,
	0x22, 0x82, 0x01, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x41, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x45, 0x6d, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x45, 0x6d, 0x69,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x43, 0x69, 0x74, 0x79, 0x22, 0x0f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x41, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x6d, 0x69, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x45, 0x6d, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x22, 0x12,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x1e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x06,
	0x63, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x22, 0xaf, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x41, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x6d,
	0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x45, 0x6d, 0x69, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69,
	0x74, 0x79, 0x22, 0x36, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x07, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22,
	0x39, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4c, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a,
	0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x22, 0x76, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x3a, 0x0a, 0x11,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x25, 0x0a, 0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x52, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64,
	0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x37, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x0d, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x22, 0x7c, 0x0a, 0x16, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x0d, 0x73,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x05,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x41, 0x0a, 0x0b, 0x41, 0x64, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x0e, 0x0a, 0x0c,
	0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x54, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x05, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x7e, 0x0a, 0x0e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x32, 0x0a, 0x0f,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1f, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x22, 0xd0, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xd6, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x11, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22,
	0xd9, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x83, 0x02,
	0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x3e, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xaa, 0x02, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xa0, 0x02, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb3, 0x02, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x14, 0x0a, 0x12,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x22, 0xdd,
	0x02, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3e,
	0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x32, 0x8a,
	0x1c, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x41, 0x64,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x41,
	0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64,
	0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2d, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x39, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x73, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x73, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x64, 0x64, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x30, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x39, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3c, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x36, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x08, 0x44, 0x65, 0x6c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x19, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30,
	0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x39, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x44,
	0x65, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33,
	0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x33, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12,
	0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x1a, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a,
	0x08, 0x44, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x36, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64,
	0x64, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_article_proto_rawDescOnce sync.Once
	file_article_proto_rawDescData = file_article_proto_rawDesc
)

func file_article_proto_rawDescGZIP() []byte {
	file_article_proto_rawDescOnce.Do(func() {
		file_article_proto_rawDescData = protoimpl.X.CompressGZIP(file_article_proto_rawDescData)
	})
	return file_article_proto_rawDescData
}

var file_article_proto_msgTypes = make([]protoimpl.MessageInfo, 132)
var file_article_proto_goTypes = []any{
	(*Addrs)(nil),                    // 0: pb.Addrs
	(*AddAddrsReq)(nil),              // 1: pb.AddAddrsReq
	(*AddAddrsResp)(nil),             // 2: pb.AddAddrsResp
	(*UpdateAddrsReq)(nil),           // 3: pb.UpdateAddrsReq
	(*UpdateAddrsResp)(nil),          // 4: pb.UpdateAddrsResp
	(*DelAddrsReq)(nil),              // 5: pb.DelAddrsReq
	(*DelAddrsResp)(nil),             // 6: pb.DelAddrsResp
	(*GetAddrsByIdReq)(nil),          // 7: pb.GetAddrsByIdReq
	(*GetAddrsByIdResp)(nil),         // 8: pb.GetAddrsByIdResp
	(*SearchAddrsReq)(nil),           // 9: pb.SearchAddrsReq
	(*SearchAddrsResp)(nil),          // 10: pb.SearchAddrsResp
	(*Alerts)(nil),                   // 11: pb.Alerts
	(*AddAlertsReq)(nil),             // 12: pb.AddAlertsReq
	(*AddAlertsResp)(nil),            // 13: pb.AddAlertsResp
	(*UpdateAlertsReq)(nil),          // 14: pb.UpdateAlertsReq
	(*UpdateAlertsResp)(nil),         // 15: pb.UpdateAlertsResp
	(*DelAlertsReq)(nil),             // 16: pb.DelAlertsReq
	(*DelAlertsResp)(nil),            // 17: pb.DelAlertsResp
	(*GetAlertsByIdReq)(nil),         // 18: pb.GetAlertsByIdReq
	(*GetAlertsByIdResp)(nil),        // 19: pb.GetAlertsByIdResp
	(*SearchAlertsReq)(nil),          // 20: pb.SearchAlertsReq
	(*SearchAlertsResp)(nil),         // 21: pb.SearchAlertsResp
	(*Article)(nil),                  // 22: pb.Article
	(*AddArticleReq)(nil),            // 23: pb.AddArticleReq
	(*AddArticleResp)(nil),           // 24: pb.AddArticleResp
	(*UpdateArticleReq)(nil),         // 25: pb.UpdateArticleReq
	(*UpdateArticleResp)(nil),        // 26: pb.UpdateArticleResp
	(*DelArticleReq)(nil),            // 27: pb.DelArticleReq
	(*DelArticleResp)(nil),           // 28: pb.DelArticleResp
	(*GetArticleByIdReq)(nil),        // 29: pb.GetArticleByIdReq
	(*GetArticleByIdResp)(nil),       // 30: pb.GetArticleByIdResp
	(*SearchArticleReq)(nil),         // 31: pb.SearchArticleReq
	(*SearchArticleResp)(nil),        // 32: pb.SearchArticleResp
	(*Class)(nil),                    // 33: pb.Class
	(*AddClassReq)(nil),              // 34: pb.AddClassReq
	(*AddClassResp)(nil),             // 35: pb.AddClassResp
	(*UpdateClassReq)(nil),           // 36: pb.UpdateClassReq
	(*UpdateClassResp)(nil),          // 37: pb.UpdateClassResp
	(*DelClassReq)(nil),              // 38: pb.DelClassReq
	(*DelClassResp)(nil),             // 39: pb.DelClassResp
	(*GetClassByIdReq)(nil),          // 40: pb.GetClassByIdReq
	(*GetClassByIdResp)(nil),         // 41: pb.GetClassByIdResp
	(*SearchClassReq)(nil),           // 42: pb.SearchClassReq
	(*SearchClassResp)(nil),          // 43: pb.SearchClassResp
	(*ClusterInfo)(nil),              // 44: pb.ClusterInfo
	(*AddClusterInfoReq)(nil),        // 45: pb.AddClusterInfoReq
	(*AddClusterInfoResp)(nil),       // 46: pb.AddClusterInfoResp
	(*UpdateClusterInfoReq)(nil),     // 47: pb.UpdateClusterInfoReq
	(*UpdateClusterInfoResp)(nil),    // 48: pb.UpdateClusterInfoResp
	(*DelClusterInfoReq)(nil),        // 49: pb.DelClusterInfoReq
	(*DelClusterInfoResp)(nil),       // 50: pb.DelClusterInfoResp
	(*GetClusterInfoByIdReq)(nil),    // 51: pb.GetClusterInfoByIdReq
	(*GetClusterInfoByIdResp)(nil),   // 52: pb.GetClusterInfoByIdResp
	(*SearchClusterInfoReq)(nil),     // 53: pb.SearchClusterInfoReq
	(*SearchClusterInfoResp)(nil),    // 54: pb.SearchClusterInfoResp
	(*Course)(nil),                   // 55: pb.Course
	(*AddCourseReq)(nil),             // 56: pb.AddCourseReq
	(*AddCourseResp)(nil),            // 57: pb.AddCourseResp
	(*UpdateCourseReq)(nil),          // 58: pb.UpdateCourseReq
	(*UpdateCourseResp)(nil),         // 59: pb.UpdateCourseResp
	(*DelCourseReq)(nil),             // 60: pb.DelCourseReq
	(*DelCourseResp)(nil),            // 61: pb.DelCourseResp
	(*GetCourseByIdReq)(nil),         // 62: pb.GetCourseByIdReq
	(*GetCourseByIdResp)(nil),        // 63: pb.GetCourseByIdResp
	(*SearchCourseReq)(nil),          // 64: pb.SearchCourseReq
	(*SearchCourseResp)(nil),         // 65: pb.SearchCourseResp
	(*Custer)(nil),                   // 66: pb.Custer
	(*AddCusterReq)(nil),             // 67: pb.AddCusterReq
	(*AddCusterResp)(nil),            // 68: pb.AddCusterResp
	(*UpdateCusterReq)(nil),          // 69: pb.UpdateCusterReq
	(*UpdateCusterResp)(nil),         // 70: pb.UpdateCusterResp
	(*DelCusterReq)(nil),             // 71: pb.DelCusterReq
	(*DelCusterResp)(nil),            // 72: pb.DelCusterResp
	(*GetCusterByIdReq)(nil),         // 73: pb.GetCusterByIdReq
	(*GetCusterByIdResp)(nil),        // 74: pb.GetCusterByIdResp
	(*SearchCusterReq)(nil),          // 75: pb.SearchCusterReq
	(*SearchCusterResp)(nil),         // 76: pb.SearchCusterResp
	(*Student)(nil),                  // 77: pb.Student
	(*AddStudentReq)(nil),            // 78: pb.AddStudentReq
	(*AddStudentResp)(nil),           // 79: pb.AddStudentResp
	(*UpdateStudentReq)(nil),         // 80: pb.UpdateStudentReq
	(*UpdateStudentResp)(nil),        // 81: pb.UpdateStudentResp
	(*DelStudentReq)(nil),            // 82: pb.DelStudentReq
	(*DelStudentResp)(nil),           // 83: pb.DelStudentResp
	(*GetStudentByIdReq)(nil),        // 84: pb.GetStudentByIdReq
	(*GetStudentByIdResp)(nil),       // 85: pb.GetStudentByIdResp
	(*SearchStudentReq)(nil),         // 86: pb.SearchStudentReq
	(*SearchStudentResp)(nil),        // 87: pb.SearchStudentResp
	(*StudentCourse)(nil),            // 88: pb.StudentCourse
	(*AddStudentCourseReq)(nil),      // 89: pb.AddStudentCourseReq
	(*AddStudentCourseResp)(nil),     // 90: pb.AddStudentCourseResp
	(*UpdateStudentCourseReq)(nil),   // 91: pb.UpdateStudentCourseReq
	(*UpdateStudentCourseResp)(nil),  // 92: pb.UpdateStudentCourseResp
	(*DelStudentCourseReq)(nil),      // 93: pb.DelStudentCourseReq
	(*DelStudentCourseResp)(nil),     // 94: pb.DelStudentCourseResp
	(*GetStudentCourseByIdReq)(nil),  // 95: pb.GetStudentCourseByIdReq
	(*GetStudentCourseByIdResp)(nil), // 96: pb.GetStudentCourseByIdResp
	(*SearchStudentCourseReq)(nil),   // 97: pb.SearchStudentCourseReq
	(*SearchStudentCourseResp)(nil),  // 98: pb.SearchStudentCourseResp
	(*Tasks)(nil),                    // 99: pb.Tasks
	(*AddTasksReq)(nil),              // 100: pb.AddTasksReq
	(*AddTasksResp)(nil),             // 101: pb.AddTasksResp
	(*UpdateTasksReq)(nil),           // 102: pb.UpdateTasksReq
	(*UpdateTasksResp)(nil),          // 103: pb.UpdateTasksResp
	(*DelTasksReq)(nil),              // 104: pb.DelTasksReq
	(*DelTasksResp)(nil),             // 105: pb.DelTasksResp
	(*GetTasksByIdReq)(nil),          // 106: pb.GetTasksByIdReq
	(*GetTasksByIdResp)(nil),         // 107: pb.GetTasksByIdResp
	(*SearchTasksReq)(nil),           // 108: pb.SearchTasksReq
	(*SearchTasksResp)(nil),          // 109: pb.SearchTasksResp
	(*UserInfo)(nil),                 // 110: pb.UserInfo
	(*AddUserInfoReq)(nil),           // 111: pb.AddUserInfoReq
	(*AddUserInfoResp)(nil),          // 112: pb.AddUserInfoResp
	(*UpdateUserInfoReq)(nil),        // 113: pb.UpdateUserInfoReq
	(*UpdateUserInfoResp)(nil),       // 114: pb.UpdateUserInfoResp
	(*DelUserInfoReq)(nil),           // 115: pb.DelUserInfoReq
	(*DelUserInfoResp)(nil),          // 116: pb.DelUserInfoResp
	(*GetUserInfoByIdReq)(nil),       // 117: pb.GetUserInfoByIdReq
	(*GetUserInfoByIdResp)(nil),      // 118: pb.GetUserInfoByIdResp
	(*SearchUserInfoReq)(nil),        // 119: pb.SearchUserInfoReq
	(*SearchUserInfoResp)(nil),       // 120: pb.SearchUserInfoResp
	(*Workflow)(nil),                 // 121: pb.Workflow
	(*AddWorkflowReq)(nil),           // 122: pb.AddWorkflowReq
	(*AddWorkflowResp)(nil),          // 123: pb.AddWorkflowResp
	(*UpdateWorkflowReq)(nil),        // 124: pb.UpdateWorkflowReq
	(*UpdateWorkflowResp)(nil),       // 125: pb.UpdateWorkflowResp
	(*DelWorkflowReq)(nil),           // 126: pb.DelWorkflowReq
	(*DelWorkflowResp)(nil),          // 127: pb.DelWorkflowResp
	(*GetWorkflowByIdReq)(nil),       // 128: pb.GetWorkflowByIdReq
	(*GetWorkflowByIdResp)(nil),      // 129: pb.GetWorkflowByIdResp
	(*SearchWorkflowReq)(nil),        // 130: pb.SearchWorkflowReq
	(*SearchWorkflowResp)(nil),       // 131: pb.SearchWorkflowResp
}
var file_article_proto_depIdxs = []int32{
	0,   // 0: pb.GetAddrsByIdResp.addrs:type_name -> pb.Addrs
	0,   // 1: pb.SearchAddrsResp.addrs:type_name -> pb.Addrs
	11,  // 2: pb.GetAlertsByIdResp.alerts:type_name -> pb.Alerts
	11,  // 3: pb.SearchAlertsResp.alerts:type_name -> pb.Alerts
	22,  // 4: pb.GetArticleByIdResp.article:type_name -> pb.Article
	22,  // 5: pb.SearchArticleResp.article:type_name -> pb.Article
	33,  // 6: pb.GetClassByIdResp.class:type_name -> pb.Class
	33,  // 7: pb.SearchClassResp.class:type_name -> pb.Class
	44,  // 8: pb.GetClusterInfoByIdResp.clusterInfo:type_name -> pb.ClusterInfo
	44,  // 9: pb.SearchClusterInfoResp.clusterInfo:type_name -> pb.ClusterInfo
	55,  // 10: pb.GetCourseByIdResp.course:type_name -> pb.Course
	55,  // 11: pb.SearchCourseResp.course:type_name -> pb.Course
	66,  // 12: pb.GetCusterByIdResp.custer:type_name -> pb.Custer
	66,  // 13: pb.SearchCusterResp.custer:type_name -> pb.Custer
	77,  // 14: pb.GetStudentByIdResp.student:type_name -> pb.Student
	77,  // 15: pb.SearchStudentResp.student:type_name -> pb.Student
	88,  // 16: pb.GetStudentCourseByIdResp.studentCourse:type_name -> pb.StudentCourse
	88,  // 17: pb.SearchStudentCourseResp.studentCourse:type_name -> pb.StudentCourse
	99,  // 18: pb.GetTasksByIdResp.tasks:type_name -> pb.Tasks
	99,  // 19: pb.SearchTasksResp.tasks:type_name -> pb.Tasks
	110, // 20: pb.GetUserInfoByIdResp.userInfo:type_name -> pb.UserInfo
	110, // 21: pb.SearchUserInfoResp.userInfo:type_name -> pb.UserInfo
	121, // 22: pb.GetWorkflowByIdResp.workflow:type_name -> pb.Workflow
	121, // 23: pb.SearchWorkflowResp.workflow:type_name -> pb.Workflow
	1,   // 24: pb.article.AddAddrs:input_type -> pb.AddAddrsReq
	3,   // 25: pb.article.UpdateAddrs:input_type -> pb.UpdateAddrsReq
	5,   // 26: pb.article.DelAddrs:input_type -> pb.DelAddrsReq
	7,   // 27: pb.article.GetAddrsById:input_type -> pb.GetAddrsByIdReq
	9,   // 28: pb.article.SearchAddrs:input_type -> pb.SearchAddrsReq
	12,  // 29: pb.article.AddAlerts:input_type -> pb.AddAlertsReq
	14,  // 30: pb.article.UpdateAlerts:input_type -> pb.UpdateAlertsReq
	16,  // 31: pb.article.DelAlerts:input_type -> pb.DelAlertsReq
	18,  // 32: pb.article.GetAlertsById:input_type -> pb.GetAlertsByIdReq
	20,  // 33: pb.article.SearchAlerts:input_type -> pb.SearchAlertsReq
	23,  // 34: pb.article.AddArticle:input_type -> pb.AddArticleReq
	25,  // 35: pb.article.UpdateArticle:input_type -> pb.UpdateArticleReq
	27,  // 36: pb.article.DelArticle:input_type -> pb.DelArticleReq
	29,  // 37: pb.article.GetArticleById:input_type -> pb.GetArticleByIdReq
	31,  // 38: pb.article.SearchArticle:input_type -> pb.SearchArticleReq
	34,  // 39: pb.article.AddClass:input_type -> pb.AddClassReq
	36,  // 40: pb.article.UpdateClass:input_type -> pb.UpdateClassReq
	38,  // 41: pb.article.DelClass:input_type -> pb.DelClassReq
	40,  // 42: pb.article.GetClassById:input_type -> pb.GetClassByIdReq
	42,  // 43: pb.article.SearchClass:input_type -> pb.SearchClassReq
	45,  // 44: pb.article.AddClusterInfo:input_type -> pb.AddClusterInfoReq
	47,  // 45: pb.article.UpdateClusterInfo:input_type -> pb.UpdateClusterInfoReq
	49,  // 46: pb.article.DelClusterInfo:input_type -> pb.DelClusterInfoReq
	51,  // 47: pb.article.GetClusterInfoById:input_type -> pb.GetClusterInfoByIdReq
	53,  // 48: pb.article.SearchClusterInfo:input_type -> pb.SearchClusterInfoReq
	56,  // 49: pb.article.AddCourse:input_type -> pb.AddCourseReq
	58,  // 50: pb.article.UpdateCourse:input_type -> pb.UpdateCourseReq
	60,  // 51: pb.article.DelCourse:input_type -> pb.DelCourseReq
	62,  // 52: pb.article.GetCourseById:input_type -> pb.GetCourseByIdReq
	64,  // 53: pb.article.SearchCourse:input_type -> pb.SearchCourseReq
	67,  // 54: pb.article.AddCuster:input_type -> pb.AddCusterReq
	69,  // 55: pb.article.UpdateCuster:input_type -> pb.UpdateCusterReq
	71,  // 56: pb.article.DelCuster:input_type -> pb.DelCusterReq
	73,  // 57: pb.article.GetCusterById:input_type -> pb.GetCusterByIdReq
	75,  // 58: pb.article.SearchCuster:input_type -> pb.SearchCusterReq
	78,  // 59: pb.article.AddStudent:input_type -> pb.AddStudentReq
	80,  // 60: pb.article.UpdateStudent:input_type -> pb.UpdateStudentReq
	82,  // 61: pb.article.DelStudent:input_type -> pb.DelStudentReq
	84,  // 62: pb.article.GetStudentById:input_type -> pb.GetStudentByIdReq
	86,  // 63: pb.article.SearchStudent:input_type -> pb.SearchStudentReq
	89,  // 64: pb.article.AddStudentCourse:input_type -> pb.AddStudentCourseReq
	91,  // 65: pb.article.UpdateStudentCourse:input_type -> pb.UpdateStudentCourseReq
	93,  // 66: pb.article.DelStudentCourse:input_type -> pb.DelStudentCourseReq
	95,  // 67: pb.article.GetStudentCourseById:input_type -> pb.GetStudentCourseByIdReq
	97,  // 68: pb.article.SearchStudentCourse:input_type -> pb.SearchStudentCourseReq
	100, // 69: pb.article.AddTasks:input_type -> pb.AddTasksReq
	102, // 70: pb.article.UpdateTasks:input_type -> pb.UpdateTasksReq
	104, // 71: pb.article.DelTasks:input_type -> pb.DelTasksReq
	106, // 72: pb.article.GetTasksById:input_type -> pb.GetTasksByIdReq
	108, // 73: pb.article.SearchTasks:input_type -> pb.SearchTasksReq
	111, // 74: pb.article.AddUserInfo:input_type -> pb.AddUserInfoReq
	113, // 75: pb.article.UpdateUserInfo:input_type -> pb.UpdateUserInfoReq
	115, // 76: pb.article.DelUserInfo:input_type -> pb.DelUserInfoReq
	117, // 77: pb.article.GetUserInfoById:input_type -> pb.GetUserInfoByIdReq
	119, // 78: pb.article.SearchUserInfo:input_type -> pb.SearchUserInfoReq
	122, // 79: pb.article.AddWorkflow:input_type -> pb.AddWorkflowReq
	124, // 80: pb.article.UpdateWorkflow:input_type -> pb.UpdateWorkflowReq
	126, // 81: pb.article.DelWorkflow:input_type -> pb.DelWorkflowReq
	128, // 82: pb.article.GetWorkflowById:input_type -> pb.GetWorkflowByIdReq
	130, // 83: pb.article.SearchWorkflow:input_type -> pb.SearchWorkflowReq
	2,   // 84: pb.article.AddAddrs:output_type -> pb.AddAddrsResp
	4,   // 85: pb.article.UpdateAddrs:output_type -> pb.UpdateAddrsResp
	6,   // 86: pb.article.DelAddrs:output_type -> pb.DelAddrsResp
	8,   // 87: pb.article.GetAddrsById:output_type -> pb.GetAddrsByIdResp
	10,  // 88: pb.article.SearchAddrs:output_type -> pb.SearchAddrsResp
	13,  // 89: pb.article.AddAlerts:output_type -> pb.AddAlertsResp
	15,  // 90: pb.article.UpdateAlerts:output_type -> pb.UpdateAlertsResp
	17,  // 91: pb.article.DelAlerts:output_type -> pb.DelAlertsResp
	19,  // 92: pb.article.GetAlertsById:output_type -> pb.GetAlertsByIdResp
	21,  // 93: pb.article.SearchAlerts:output_type -> pb.SearchAlertsResp
	24,  // 94: pb.article.AddArticle:output_type -> pb.AddArticleResp
	26,  // 95: pb.article.UpdateArticle:output_type -> pb.UpdateArticleResp
	28,  // 96: pb.article.DelArticle:output_type -> pb.DelArticleResp
	30,  // 97: pb.article.GetArticleById:output_type -> pb.GetArticleByIdResp
	32,  // 98: pb.article.SearchArticle:output_type -> pb.SearchArticleResp
	35,  // 99: pb.article.AddClass:output_type -> pb.AddClassResp
	37,  // 100: pb.article.UpdateClass:output_type -> pb.UpdateClassResp
	39,  // 101: pb.article.DelClass:output_type -> pb.DelClassResp
	41,  // 102: pb.article.GetClassById:output_type -> pb.GetClassByIdResp
	43,  // 103: pb.article.SearchClass:output_type -> pb.SearchClassResp
	46,  // 104: pb.article.AddClusterInfo:output_type -> pb.AddClusterInfoResp
	48,  // 105: pb.article.UpdateClusterInfo:output_type -> pb.UpdateClusterInfoResp
	50,  // 106: pb.article.DelClusterInfo:output_type -> pb.DelClusterInfoResp
	52,  // 107: pb.article.GetClusterInfoById:output_type -> pb.GetClusterInfoByIdResp
	54,  // 108: pb.article.SearchClusterInfo:output_type -> pb.SearchClusterInfoResp
	57,  // 109: pb.article.AddCourse:output_type -> pb.AddCourseResp
	59,  // 110: pb.article.UpdateCourse:output_type -> pb.UpdateCourseResp
	61,  // 111: pb.article.DelCourse:output_type -> pb.DelCourseResp
	63,  // 112: pb.article.GetCourseById:output_type -> pb.GetCourseByIdResp
	65,  // 113: pb.article.SearchCourse:output_type -> pb.SearchCourseResp
	68,  // 114: pb.article.AddCuster:output_type -> pb.AddCusterResp
	70,  // 115: pb.article.UpdateCuster:output_type -> pb.UpdateCusterResp
	72,  // 116: pb.article.DelCuster:output_type -> pb.DelCusterResp
	74,  // 117: pb.article.GetCusterById:output_type -> pb.GetCusterByIdResp
	76,  // 118: pb.article.SearchCuster:output_type -> pb.SearchCusterResp
	79,  // 119: pb.article.AddStudent:output_type -> pb.AddStudentResp
	81,  // 120: pb.article.UpdateStudent:output_type -> pb.UpdateStudentResp
	83,  // 121: pb.article.DelStudent:output_type -> pb.DelStudentResp
	85,  // 122: pb.article.GetStudentById:output_type -> pb.GetStudentByIdResp
	87,  // 123: pb.article.SearchStudent:output_type -> pb.SearchStudentResp
	90,  // 124: pb.article.AddStudentCourse:output_type -> pb.AddStudentCourseResp
	92,  // 125: pb.article.UpdateStudentCourse:output_type -> pb.UpdateStudentCourseResp
	94,  // 126: pb.article.DelStudentCourse:output_type -> pb.DelStudentCourseResp
	96,  // 127: pb.article.GetStudentCourseById:output_type -> pb.GetStudentCourseByIdResp
	98,  // 128: pb.article.SearchStudentCourse:output_type -> pb.SearchStudentCourseResp
	101, // 129: pb.article.AddTasks:output_type -> pb.AddTasksResp
	103, // 130: pb.article.UpdateTasks:output_type -> pb.UpdateTasksResp
	105, // 131: pb.article.DelTasks:output_type -> pb.DelTasksResp
	107, // 132: pb.article.GetTasksById:output_type -> pb.GetTasksByIdResp
	109, // 133: pb.article.SearchTasks:output_type -> pb.SearchTasksResp
	112, // 134: pb.article.AddUserInfo:output_type -> pb.AddUserInfoResp
	114, // 135: pb.article.UpdateUserInfo:output_type -> pb.UpdateUserInfoResp
	116, // 136: pb.article.DelUserInfo:output_type -> pb.DelUserInfoResp
	118, // 137: pb.article.GetUserInfoById:output_type -> pb.GetUserInfoByIdResp
	120, // 138: pb.article.SearchUserInfo:output_type -> pb.SearchUserInfoResp
	123, // 139: pb.article.AddWorkflow:output_type -> pb.AddWorkflowResp
	125, // 140: pb.article.UpdateWorkflow:output_type -> pb.UpdateWorkflowResp
	127, // 141: pb.article.DelWorkflow:output_type -> pb.DelWorkflowResp
	129, // 142: pb.article.GetWorkflowById:output_type -> pb.GetWorkflowByIdResp
	131, // 143: pb.article.SearchWorkflow:output_type -> pb.SearchWorkflowResp
	84,  // [84:144] is the sub-list for method output_type
	24,  // [24:84] is the sub-list for method input_type
	24,  // [24:24] is the sub-list for extension type_name
	24,  // [24:24] is the sub-list for extension extendee
	0,   // [0:24] is the sub-list for field type_name
}

func init() { file_article_proto_init() }
func file_article_proto_init() {
	if File_article_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_article_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   132,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_article_proto_goTypes,
		DependencyIndexes: file_article_proto_depIdxs,
		MessageInfos:      file_article_proto_msgTypes,
	}.Build()
	File_article_proto = out.File
	file_article_proto_rawDesc = nil
	file_article_proto_goTypes = nil
	file_article_proto_depIdxs = nil
}
